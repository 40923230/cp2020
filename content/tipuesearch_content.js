var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': '開發', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發，可以在一個目錄中放入cmsimde，然後將up_dir中的內容放到與cmsimde目錄同位階的地方，使用命令進入cmsimde目錄，執行python wsgi.py ，就可以啟動，以瀏覽器https：// localhost：9443就可以連接，以admin作為管理者密碼，就可以登錄維護內容。 \n cmsimde的開發採用Leo編輯器，打開cmsimde目錄中的cmsimde.leo就可以進行程序修改，結束後，以保留網際內容，只要將cmsimde外部的內容倒回up_dir目錄中即可連續對cmsimde遠程倉儲進行改版。 \n init.py位於up_dir目錄中，可以設置site_title與uwsgi等變數。 \n', 'tags': '', 'url': '開發.html'}, {'title': 'TEST', 'text': '', 'tags': '', 'url': 'TEST.html'}]};