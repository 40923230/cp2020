var tipuesearch = {"pages": [{'title': '首頁123', 'text': '', 'tags': '', 'url': '首頁123.html'}, {'title': 'PCH11', 'text': '', 'tags': '', 'url': 'PCH11.html'}, {'title': 'Fiber-Optic Cable', 'text': 'Overview \n \n \n In this module, we’re going to discuss the various types of network media. We will begin with fiber-optic cable and then discuss twisted pair cable and coaxial cable. For each of these cable types, we will discuss appearance, characteristics, and types of connectors, as well as speed and limitations. \n 總覽 \n 在本模塊中，我們將討論各種類型的網絡媒體。 我們將從光纖電纜開始，然後討論雙絞線電纜和同軸電纜。 對於每種電纜類型，我們將討論連接器的外觀，特性和類型，以及速度和限制。 \n Fiber-Optic Cable \n \n \n \n \n Fiber-optic cables are constructed by using a glass core at the center of the cable that is surrounded by cladding. In order to send data from one end of the cable to the other, light from a light-emitting diode (LED) or laser is used to transmit the signal down the glass fiber at the center of the cable. Because the data is being transmitted using light, it is immune to the effects of electromagnetic interference (EMI) that impact traditional copper-based cables, such as twisted pair and coaxial cables. Fiber-optic cables possess the ability to send the data a very far distance (many miles) without the use of a repeater. They also can carry a significant amount of data due to their large bandwidth and the information traveling at light speed. Their bandwidth can be measured in gigabits or even terabits per second. There are two types of fiber cables: multimode and single-mode fiber. \n 光纖電纜 \n 光纖電纜是通過在電纜的中心使用玻璃芯構成的，該玻璃芯被包層圍繞。 為了將數據從電纜的一端發送到另一端，可使用來自發光二極管（LED）或激光的光沿電纜中心的玻璃纖維向下傳輸信號。 由於數據是通過光傳輸的，因此不受電磁干擾（EMI）的影響，電磁干擾會影響傳統的銅基電纜，如雙絞線和同軸電纜。 光纖具有無需使用中繼器就可以很遠的距離（許多英里）發送數據的能力。 由於它們的大帶寬和以光速傳播的信息，它們還可以攜帶大量數據。 它們的帶寬可以每秒千兆比特或什至兆兆比特來度量。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n Fiber-optic cable. Photo used under CC-BY-NC-ND license from  Craig Rodway . \n Multimode fiber cables (MMF) contain a larger core than the single-mode variety. The core size for a multimode fiber is 62.5 microns. A micron is a very small unit of measurement—it is actually even smaller than the width of a human hair. MMF’s larger core enables multiple modes of travel for the light from one end of the cable to the other. This allows a single fiber to carry multiple signals across it, with each signal being transmitted at a slightly different reflective angle. When the light reaches the destination, the signals are then converted back into 1s and 0s and passed to the computer by the network interface card. Multimode fiber is commonly used in shorter distance fiber connections, such as from a router to a switch, a switch to a switch, or a server to a switch. \n Single-mode fiber cables (SMF) contain a much smaller core than the multimode variety. The core size for SMF is 10 microns. SMF’s smaller core only allows for a single mode of travel for the light from one end of the cable to the other. This straight-through connection allows for data to travel longer distances without a repeater than it can travel using MMF. When the light reaches the destination, the signals are then converted back into 1s and 0s and passed to the computer by the network interface card. Single mode fiber is commonly used in very long distance fiber connections, such as a backbone connection from one local area network to another. \n 多模光纜（MMF）的芯線比單模光纜大。多模光纖的纖芯尺寸為62.5微米。微米是非常小的度量單位，實際上甚至比人類頭髮的寬度還小。MMF的較大芯線實現了從電纜一端到另一端的多種傳播模式。這樣一來，單根光纖就可以在其上傳輸多個信號，而每個信號都以稍微不同的反射角傳輸。當光線到達目的地時，信號然後被轉換回1和0，並通過網絡接口卡傳遞到計算機。多模光纖通常用於較短距離的光纖連接中，例如從路由器到交換機，從交換機到交換機或從服務器到交換機。 \n 單模光纜（SMF）的芯線比多模光纜小得多。 SMF的芯尺寸為10微米。 SMF的較小芯線僅允許光從電纜一端到另一端的單一傳播模式。 這種直通連接允許數據在沒有中繼器的情況下傳輸的距離比使用MMF傳輸的距離更長。 當光線到達目的地時，信號然後被轉換回1和0，並通過網絡接口卡傳遞到計算機。 單模光纖通常用於超長距離的光纖連接中，例如從一個局域網到另一個局域網的骨干連接。 \n Fiber-Optic Cable Connectors \n \n \n \n \n Fiber cables only come in the two types discussed above: single-mode and multimode. However, the ends of each of these cables come in four varieties. \n The subscriber connector (SC) is a fiber-optic cable connector that uses a push-pull mechanism to latch into the port, similar to common audio and video cables. If you want to enable bidirectional transmission for sending and receiving data, you need to have two fiber cables, so sometimes a dual SC connector is used. \n The straight tip (ST) connector is a fiber-optic cable connector that uses a bayonet plug and socket. It was the first de facto standard connector for most commercial wiring using fiber cables and it is very commonly found in fiber networks. \n The Lucent connector (LC) is a miniaturized version of the fiber-optic SC connector. It looks somewhat like the SC, but is half the size, with a 1.25 mm ferrule instead of 2.5 mm, making it very useful when connecting multiple devices in a small area, such as on a 24-port switch’s front panel. \n The mechanical transfer-registered jack (MT-RJ) connector is a fiber-optic cable connector that is very popular for small-form-factor devices due to its small size. This connector houses two fibers and mates with locating pins on the plug. These connectors are commonly found connecting a switch to a patch panel, because both devices have a limited area on their front panels. \n 光纖電纜連接器 \n 光纖電纜僅屬於上述兩種類型：單模和多模。但是，每條電纜的末端都有四種。 \n 用戶連接器（SC）是一種光纖電纜連接器，類似於普通的音頻和視頻電纜，它使用推挽機制鎖入端口。如果要啟用雙向傳輸以發送和接收數據，則需要兩條光纖電纜，因此有時會使用雙SC連接器。 \n 筆直（ST）連接器是使用卡口插頭和插座的光纖電纜連接器。它是大多數使用光纖電纜進行商業佈線的第一個事實上的標準連接器，在光纖網絡中非常常見。 \n 朗訊連接器（LC）是光纖SC連接器的微型版本。它看上去有點像SC，但尺寸只有一半，只有1.25毫米而不是2.5毫米的插芯，因此在小區域（例如24端口交換機的前面板）連接多個設備時非常有用。 \n 機械傳輸註冊插孔（MT-RJ）連接器是一種光纖電纜連接器，由於其尺寸小，在小型設備中非常受歡迎。該連接器容納兩根光纖，並與插頭上的定位銷配對。通常發現這些連接器將開關連接到配線架，因為兩個設備的前面板都有有限的區域。 \n \n \n \n \n \n \n \n \n Drag and drop the connector name to match the image of its corresponding connector. \n \n \n \n \n \n \n Connector Image \n Connector name \n \n \n \n \n \n SC \n \n \n \n \n \n \n \n LC \n \n \n \n \n \n \n \n ST \n \n \n \n \n \n \n \n MT-RJ \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Fiber-Optic Cable.html'}, {'title': 'Twisted Pair Cable', 'text': '', 'tags': '', 'url': 'Twisted Pair Cable.html'}, {'title': 'Coaxial Cable', 'text': 'Coaxial cable is a much older media technology. Coaxial cable, also known as coax for short, is composed of two conductors. The inner conductor, which is known as the insulated conductor (center wire), is the copper wire over which data is passed. The outer conductor is the braided metal shield and aids in protecting the inner wire from physical injury and the effects of EMI. Much like the shielding we saw in shielded twisted pair, the outer shield helps keep electromagnetic interference out of the data’s path. Between the inner conductor and the outer shield, we find an insulated core that prevents any data transfer between the inner core and outer shield. The outside of the cable is made of a flexible plastic jacket, much like the twisted pair cabling. Coaxial cabling was included in the first Ethernet standard as 10Base5 (thicknet) and continued to be used throughout updates as 10Base2 (thinnet) as well as being most commonly used in bus and ring networks. UTP cabling however, is easier to work with in a star topology and is significantly less expensive. \n \n \n \n 同軸電纜是一種較老的媒體技術。同軸電纜，也簡稱為同軸電纜，由兩個導體組成。內部導體（稱為絕緣導體（中心線））是在其上傳遞數據的銅線。外導體是編織的金屬屏蔽層，有助於保護內線免受物理傷害和EMI的影響。就像我們在屏蔽雙絞線中看到的屏蔽一樣，外部屏蔽有助於將電磁干擾保持在數據路徑之外。在內部導體和外部屏蔽層之間，我們找到了一個絕緣芯，可防止在內芯和外部屏蔽層之間進行任何數據傳輸。電纜的外部由柔軟的塑料護套製成，非常類似於雙絞線電纜。同軸電纜已包含在第一個以太網標準中，稱為10Base5（Thicknet），並在整個更新中繼續用作10Base2（Thinnet），並且在總線和環形網絡中最常用。但是，UTP電纜更易於在星形拓撲中使用，並且價格便宜得多。 \n Coaxial Cable Types \n \n \n There are three dominant coaxial cable types. The RG-6 is commonly used by cable TV companies to connect individual homes to the TV network. These cables are thick and usually used for outside connections to withstand the effects of the weather. The RG-58 is a type of coaxial cable that was heavily used in early 10Base2 (thinnet) networks, such as bus and ring topologies. Finally, the RG-59 is the traditional coaxial cable used to carry composite video between two nearby devices, such as your TV and the cable box. If you are a cable Internet user, this is also used to carry the WAN connection from your wall jack to your cable modem. \n 同軸電纜類型 \n 共有三種主要的同軸電纜類型。 有線電視公司通常使用RG-6將單個房屋連接到電視網絡。 這些電纜很粗，通常用於外部連接以承受天氣的影響。 RG-58是一種同軸電纜，在諸如總線和環形拓撲之類的早期10Base2（瘦網）網絡中大量使用。 最後，RG-59是傳統的同軸電纜，用於在兩個附近的設備（例如電視和電纜盒）之間傳送複合視頻。 如果您是有線Internet用戶，這也可用於將WAN連接從牆壁插孔連接到電纜調製解調器。 \n Coaxial Cable Connectors \n \n \n \n \n While there were three types of cables, there are only two types of common connectors used with coaxial cable. The first is called BNC, from the name Bayonet Neill-Concelman. Sometimes people also call this the British Naval connector, because the BNC was heavily used by the British in their shipboard radio systems. This connector was commonly used in early Ethernet networks and it has a “push and twist” type of connector to secure the cable to the network device. \n The F-type connector is the modern type of coaxial cable connector. It is typically used for cable TV and cable modem connections. It is connected by screwing the connector onto a threaded jack to secure the connection. \n 同軸電纜連接器 \n 雖然有三種類型的電纜，但同軸電纜僅使用兩種類型的普通連接器。 第一個稱為BNC，名稱為刺刀Neill-Concelman。 有時人們也將其稱為英國海軍連接器，因為英國人在其艦載無線電系統中大量使用了BNC。 該連接器通常用於早期的以太網網絡，並且具有“推壓式”連接器，用於將電纜固定至網絡設備。 \n F型連接器是現代類型的同軸電纜連接器。 它通常用於有線電視和電纜調製解調器的連接。 通過將連接器擰到帶螺紋的插孔上進行連接以固定連接。 \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Coaxial Cable.html'}, {'title': 'Copper vs. Fiber', 'text': '\n When we compare the advantages and disadvantages of fiber-optic cables and copper (twisted pair) cables, we have to consider that fiber-optic has a higher bandwidth (measured in Gbps or Tbps), it can carry its signal many miles without the need of a repeater, it is immune to the effects of EMI, and it has much better security than traditional twisted pair cables. However, twisted pair cabling does hold some advantages of its own. For one, it is much less expensive than fiber-optic cabling. Also, copper wiring is much easier to install, taking only a few hours to learn. Finally, twisted pair cabling can be created and terminated using inexpensive tools. For example, a complete copper wiring toolset can be bought online for less than $50, while a complete fiber-optic kit may cost $1000 or more. For these reasons, copper has remained the dominant media in most local area networks. \n 當我們比較光纖電纜和銅纜（雙絞線）的優缺點時，我們必須考慮到光纖具有更高的帶寬（以Gbps或Tbps為單位），它可以將其信號傳輸很多英里而無需作為中繼器，它不受EMI的影響，並且比傳統的雙絞線電纜具有更好的安全性。 但是，雙絞線電纜確實具有其自身的一些優點。 首先，它比光纖電纜便宜得多。 而且，銅線的安裝更容易，只需幾個小時即可學習。 最後，可以使用廉價的工具創建和終止雙絞線電纜。 例如，一套完整的銅線工具套件可以在線購買，價格不到50美元，而一套完整的光纖套件的價格可能在1000美元以上。 由於這些原因， \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Copper vs. Fiber.html'}, {'title': 'Converters', 'text': 'Because of the wide variety of cable and connector types, there is sometimes a need to convert from one type of media to another. For example, if you have to make a connection between two LANs in buildings that are located one mile apart, but your network uses Cat 5e, UTP cabling, how can you make that connection? When you look at your routers, you find they only accept RJ-45 connections, but you know that you cannot run a Cat 5e cable more than 100 meters. How can you solve this problem? With a media converter. \n Using a media converter, you can convert your RJ-45 connection into an ST, SC, or LC fiber connection, as shown in the image below. Then, you run the one-mile fiber cable to the other building, and use a media converter to convert from the ST, SC, or LC fiber connection back to the RJ-45 the other router requires. Because this is a simple, “dumb” device, it simply converts whatever is received on the first media type and repeats it back out the second media type. Common types of media converters are from Ethernet (copper) to fiber-optic (and back) or coaxial to fiber-optic (and back). \n 由於電纜和連接器的類型多種多樣，因此有時需要從一種類型的媒體轉換為另一種類型的媒體。例如，如果您必須在相距一英里的建築物中的兩個LAN之間建立連接，但是您的網絡使用Cat 5e，UTP電纜，那麼如何建立連接？當您查看路由器時，會發現它們僅接受RJ-45連接，但您知道不能將Cat 5e電纜的長度超過100米。您如何解決這個問題？帶媒體轉換器。 \n 使用媒體轉換器，您可以將RJ-45連接轉換為ST，SC或LC光纖連接，如下圖所示。 然後，將一英里的光纜連接到另一座建築物，並使用媒體轉換器將ST，SC或LC光纖連接轉換回另一台路由器所需的RJ-45。 因為這是一個簡單的“啞”設備，所以它僅轉換在第一媒體類型上接收到的所有內容，然後將其重複播放回第二媒體類型。 媒體轉換器的常見類型是從以太網（銅）到光纖（然後向後）或從同軸電纜到光纖（然後向後）。 \n \n \n \n \n \n learn by doing \n \n \n \n \n \n \n \n \n Put the steps of a TCP communication session in the correct order. \n \n \n \n \n \n \n Segments two and three are acknowledged. \n \n \n A single segment (segment 1) is sent over the network. \n \n \n Three-way handshake. \n \n \n Window size 2 is established. \n \n \n Segment one is acknowledged. \n \n \n Window size 1 is established. \n \n \n Segments two and three are sent over the network. \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Converters.html'}, {'title': '', 'text': 'Media converters. Photo used under CC-BY-NC license from  Adrian Black . \n 媒體轉換器。照片由Adrian Black 根據CC-BY-NC許可使用 。 \n', 'tags': '', 'url': '.html'}, {'title': 'PCH14', 'text': '', 'tags': '', 'url': 'PCH14.html'}, {'title': 'Overview', 'text': 'In this lesson, we will discuss transmission control protocol (TCP) and user datagram protocol (UDP), as well as their associated ports and protocols. We will specifically address the various email ports and protocols in use today, as well as discussing secure sockets layer/transport layer security (SSL/TLS) in the context of web security. Then, we will discuss file transfer protocol (FTP) and hypertext transfer protocol (HTTP) and their use on the Internet today, as well as some older technologies such as Telnet and its more secure alternative, secure shell (SSH). \n 概述 \n 在本課程中，我們將討論傳輸控制協議（TCP）和用戶數據報協議（UDP），以及它們相關的端口和協議。 我們將專門解決當今使用的各種電子郵件端口和協議，並在Web安全的背景下討論安全套接字層/傳輸層安全（SSL / TLS）。 然後，我們將討論文件傳輸協議（FTP）和超文本傳輸協議（HTTP）及其在當今Internet上的使用，以及一些較老的技術，例如Telnet及其更安全的替代方法，安全外殼（SSH）。 \n', 'tags': '', 'url': 'Overview.html'}, {'title': 'TCP and UDP', 'text': 'TCP is a connection-oriented protocol that ensures the reliable transport of data segments from one device to another. During transmission, if a segment is dropped, it will be detected and resent or retransmitted by the originator device. Each communication is acknowledged upon receipt, providing a secure model to ensure successful communications. This type of transmission is great for all network data types, especially those that need delivery to be assured. \n TCP是一種面向連接的協議，可確保將數據段從一台設備可靠地傳輸到另一台設備。 在傳輸過程中，如果某個段丟失，則發起方設備將檢測到該段並將其重新發送或重新發送。 每次通信在收到後都會得到確認，從而提供一個安全的模型來確保成功進行通信。 這種傳輸方式適用於所有網絡數據類型，尤其是那些需要確保傳輸的網絡數據類型。 \n When a TCP communication is initiated, the originator and receiver perform a “three-way handshake” before starting the data transmission. In the first step, the originator sends a packet with a synchronization (SYN) flag set. Next, the receiver acknowledges receipt of this SYN flagged packet by sending back a synchronization-acknowledged (SYN-ACK) flagged packet. Finally, the originator sends an acknowledgement of the synchronization-acknowledged flagged packet, and then data transmission occurs. \n 啟動TCP通信時，發起方和接收方在開始數據傳輸之前執行“三向握手”。 第一步，發起方發送一個設置了同步（SYN）標誌的數據包。 接下來，接收器通過發回同步確認（SYN-ACK）標記的數據包來確認此SYN標記的數據包的接收。 最後，始發者發送對已同步確認的標記數據包的確認，然後發生數據傳輸。 \n \n EXAMPLE \n \n Think of this like two students who want to discuss an important project that is upcoming. The first student, Bob, says to Jane, “Jane, I want to talk to you.” Next, Jane says, “Bob, I acknowledge that you want to talk to me and I am ready to listen.” Finally, Bob tells her, “Jane, I understand you are ready to listen. Let’s talk.” At this point, the two students can talk, knowing they are both ready to listen to each other. \n \n \n 例 \n 就像兩個想討論即將開展的重要項目的學生一樣。 第一位學生鮑勃對簡說：“簡，我想和你說話。” \xa0 接下來，簡說：“鮑勃，我承認你想和我說話，我已經準備好傾聽。” \xa0 最後，鮑勃告訴她：“簡，我知道你已經準備好聽了。 讓我們談談。” \xa0 此時，兩個學生可以交談，知道他們倆都準備好了互相傾聽。 \n \n \n \n Diagram of TCP three-way handshake. Image used under CC-BY license from National STEM\xa0 Consortium. \n \n \n UDP, or user datagram protocol, was developed as a connectionless protocol in order to increase the speed of the network over TCP transmissions. Because of the three-way handshake in TCP, as well as all the delivery assurance and quality control, TCP has a good amount of network overhead that slows down its communications. Network engineers realized that sometimes you don’t need delivery assurance or quality control. So UDP was established. \n UDP（或用戶數據報協議）被開發為無連接協議，目的是通過TCP傳輸提高網絡速度。由於TCP中的三向握手以及所有的傳送保證和質量控制，TCP具有大量的網絡開銷，從而降低了其通信速度。網絡工程師意識到有時您不需要交付保證或質量控制。這樣就建立了UDP。 \n UDP is considered unreliable, because if a segment is dropped during transmission, the sending device doesn’t know and doesn’t care. There is no retransmission. Once data is sent, it is gone. This is good, though, for audio and video streaming. In these applications, the data transferred is enormously large, and if a single segment is dropped it doesn’t affect the overall quality of the audio or video sent. \n UDP被認為是不可靠的，因為如果在傳輸過程中丟棄了一個網段，則發送設備將不知道也不在乎。 沒有重傳。 數據一旦發送，就消失了。 但是，這對於音頻和視頻流來說是很好的。 在這些應用程序中，傳輸的數據非常大，如果丟棄單個段，則不會影響所發送的音頻或視頻的整體質量。 \n \n EXAMPLE \n \n I like to think of UDP as my college calculus teacher. He started at one side of the board at 8 a.m., and by 9 a.m. he was done at the other side of the board. He never asked if the students understood what he said or wrote, he just kept transmitting. This is a great example of UDP. \n \n \n 例 \n 我喜歡將UDP視為我的大學微積分老師。 他在上午8點從董事會的一側開始，到上午9點，他在董事會的另一側完成了工作。 他從不問學生是否理解他所說或寫的內容，他只是不斷地傳播。 這是UDP的一個很好的例子。 \n \n \n \n Diagram of UDP transmission. Image used under CC-BY license from \xa0National STEM Consortium. \n', 'tags': '', 'url': 'TCP and UDP.html'}, {'title': 'TCP Vs. UDP', 'text': 'TCP and UDP have many differences. TCP is reliable, but UDP is unreliable. TCP focuses on connection-oriented communications using the three-way handshake, while UDP is connectionless. TCP uses windowing, discussed in more detail later, to control the amount of data sent at a given time based on changing network speeds, but UDP simply transmits everything once with no windowing. TCP also supports segment sequencing; UDP just hopes it gets to the destination in the right order. Finally, TCP waits for acknowledgements, but UDP just hopes it got there. To simplify it, TCP is an assured and reliable communication method, UDP is just a best-effort model. \n TCP Vs UDP協議 \n TCP和UDP有很多區別。 TCP是可靠的，但UDP是不可靠的。 TCP專注於使用三向握手的面向連接的通信，而UDP是無連接的。 TCP使用開窗（稍後將詳細討論）來基於不斷變化的網絡速度來控制在給定時間發送的數據量，但是UDP僅傳輸所有信息一次而沒有開窗。 TCP還支持段排序； UDP只是希望它以正確的順序到達目的地。 最後，TCP等待確認，但是UDP只是希望它到達目的地。 為簡化起見，TCP是一種有保證且可靠的通信方法，UDP只是一種盡力而為的模型。 \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'TCP Vs. UDP.html'}, {'title': 'TCP Windowing', 'text': '', 'tags': '', 'url': 'TCP Windowing.html'}, {'title': 'TCP IP Stack', 'text': 'Each client and server has an IP address. Clients and servers are identified on the network by their IP addresses. In addition to an IP address, each machine has numerous “ports” that we can utilize. A port is an endpoint to a logical connection. A client program specifies a particular server program on a computer in a network by identifying a port. Ports allow a single client to communicate simultaneously with multiple other devices, separating each session by using a designated port number. \n 每個客戶端和服務器都有一個IP地址。 客戶端和服務器通過其IP地址在網絡上進行標識。 除了IP地址外，每台機器都有許多我們可以利用的“端口”。 端口是邏輯連接的端點。 客戶端程序通過識別端口來指定網絡中計算機上的特定服務器程序。 端口允許單個客戶端與多個其他設備同時通信，並使用指定的端口號分隔每個會話。 \n \n EXAMPLE \n \n The best way to envision this is to think of an apartment building. Your building’s address may be 123 Main Street; this would be equivalent to your IP address. But how does the mailman know which door to use when delivering your package, since multiple families live at 123 Main Street? The mailman uses your apartment number, which defines which door in the building he would knock on to deliver your package. These apartment doors would be called ports in a computer, and the computer knows which programs and sessions requested information over the network by tracking the port numbers that make the requests. \n \n \n \n 設想此問題的最佳方法是考慮一棟公寓樓。您建築物的地址可能是123 Main Street；這相當於您的IP地址。但是由於多個家庭居住在Main Street 123號，郵遞員如何知道在運送包裹時要使用哪扇門？郵遞員使用您的公寓號碼，該號碼定義了他敲樓時要送出包裹的門。這些公寓門在計算機中稱為端口，計算機通過跟踪發出請求的端口號來知道哪些程序和會話在網絡上請求了信息。 \n \n \n \n \n \n \n \n \n EXAMPLE \n Similar to an apartment building, on the network, let’s assume the client has an IP address of 10.1.1.1, which we call the source IP. The computer’s web browser chose a port number of 1248 from which to initiate the communication and a destination of 172.16.1.2 (which would be a web server for some company) and a destination port of 80 (which is the common port number for all web page traffic). The server then replies from its IP address (172.16.1.2) and port 80 to the client who made the request at their IP address of 10.1.1.1 and port 1248. As they continue the conversation, they will continue to use these IP addresses and ports, and at the same time the web server can maintain other communications with other customers, just like the client can surf to other websites in other tabs in their browser simultaneously without mixing the data, since they are separated by the port numbers. The diagram below illustrates this communication. \n 與網絡上的公寓樓類似，我們假設客戶端的IP地址為10.1.1.1，我們將其稱為源IP。 計算機的Web瀏覽器選擇了用於發起通信的端口號1248，以及目的地172.16.1.2（對於某些公司而言將是Web服務器）和目的端口80（這是所有Web站點的通用端口號）。頁面訪問量）。 然後，服務器從其IP地址（172.16.1.2）和端口80答复給以其IP地址10.1.1.1和端口1248發出請求的客戶端。隨著他們繼續進行對話，他們將繼續使用這些IP地址和端口，同時Web服務器可以維持與其他客戶的其他通信，就像客戶可以同時瀏覽其瀏覽器其他選項卡中的其他網站而無需混合數據， 因為它們由端口號分隔。 下圖說明了這種通信。 \n \n \n \n Port numbers are considered either well-known or ephemeral. Well-known port numbers are between 1 and 1023, like the web browsing port number of 80 in our last example. Port 80 is reserved as a well-known port for all hypertext transfer protocol (HTTP) traffic. Ephemeral port numbers are considered “high-numbered” ports and start at 1024 and go up to 65,535. These are usually the ports used by the client making the request, as we saw in our web browsing example, above, when the client chose port 1248 as its requesting port. \n 端口號被認為是眾所周知的或短暫的。 眾所周知的端口號在1到1023之間，例如我們上一個示例中的Web瀏覽端口號80。 端口80保留為所有超文本傳輸協議（HTTP）通信的眾所周知的端口。 臨時端口號被認為是“高編號”端口，起始於1024，最高可達65,535。 這些通常是客戶端發出請求的端口，正如我們在上面的Web瀏覽示例中所見，當客戶端選擇端口1248作為其請求端口時。 \n \n \n \n', 'tags': '', 'url': 'TCP IP Stack.html'}, {'title': 'Networking\xa0 Transfer Protocols', 'text': "TCP/IP contains a suite of many different transfer protocols for routing information across networks. Each protocol uses a different well-known port to keep its traffic separate from the others. Web browsing occurs using either hypertext transfer protocol (HTTP) or hypertext transfer protocol secure (HTTPS). When it uses HTTP, it uses port 80. If, however, the client requests that the site be sent securely using encryption, then it uses the HTTPS protocol and port 443. When being sent securely, the client and server use either secure sockets layer (SSL) or transport layer security (TLS). These additional layers are put on top of the existing HTTP standard to encrypt the data connection between the client and the server. \n \n TCP / IP包含一套用於在網絡之間路由信息的許多不同的傳輸協議。 每種協議使用不同的眾所周知的端口，以使其流量彼此獨立。 使用超文本傳輸協議（HTTP）或安全超文本傳輸協議（HTTPS）進行Web瀏覽。 當使用HTTP時，它將使用端口80。但是，如果客戶端請求使用加密安全地發送站點，則它將使用HTTPS協議和端口443。在安全發送時，客戶端和服務器將使用安全套接字層（SSL）或傳輸層安全性（TLS）。 這些額外的層放在現有HTTP標準之上，以加密客戶端和服務器之間的數據連接。 \n In addition to browsing the web, there are many other things that can be done on the network and each uses its own dedicated port number to keep the traffic separate. File transfer protocol (FTP) uses port 21. FTP is a standard network protocol used to transfer computer files from one host to another host over a TCP-based network, such as the Internet. FTP is built on a client-server architecture and uses separate control and data connections between the client and the server. \n 除了瀏覽Web之外，網絡上還有許多其他事情可以完成，並且每件事都使用自己的專用端口號來使流量分開。 文件傳輸協議（FTP）使用端口21。FTP是一種標準網絡協議，用於通過基於TCP的網絡（例如Internet）將計算機文件從一台主機傳輸到另一台主機。 FTP建立在客戶端-服務器體系結構上，並在客戶端和服務器之間使用單獨的控制和數據連接。 \n Telnet is a text-based remote access program for computers that communicates over port 23. Telnet is a user command and an underlying TCP/IP protocol for accessing computers remotely. Through telnet, an administrator or another user can access someone else's computer remotely. Unfortunately, telnet is an unsecured protocol where all the information between the client and server is communicated in clear text, so anyone who can capture this data can read it easily. For this reason, secure shell (SSH), which uses port 22, was introduced to replace telnet. SSH is a cryptographic (encrypted) network protocol for initiating text-based shell sessions on remote machines, similar to telnet but with the added strength of encryption. \n Telnet是用於通過端口23進行通信的計算機的基於文本的遠程訪問程序。Telnet是用戶命令和用於遠程訪問計算機的基礎TCP / IP協議。 通過telnet，管理員或其他用戶可以遠程訪問其他人的計算機。 不幸的是，telnet是一種不安全的協議，其中客戶端與服務器之間的所有信息都以明文形式進行通信，因此任何可以捕獲此數據的人都可以輕鬆地讀取它。 因此，引入了使用端口22的安全外殼（SSH）來代替telnet。 SSH是一種加密（加密）網絡協議，用於在遠程計算機上啟動基於文本的Shell會話，類似於telnet，但具有增強的加密強度。 \n The domain name system (DNS) is a hierarchical distributed naming system for computers, services, or any resource connected to the Internet or to a private network. It allows for the translation of IP addresses to domain names, and from domain names to IP addresses. Remote desktop protocol (RDP) is a proprietary protocol developed by Microsoft, which provides users with a graphical interface to connect to other computers over a network connection using port 3389. The user employs RDP client software for this purpose, while the other computer must run RDP server software. RDP is a huge step up over telnet and SSH, because you receive a graphical environment to control the other user’s machine, just as if you were sitting in front of their Windows desktop. \n 域名系統（DNS）是用於計算機，服務或連接到Internet或專用網絡的任何資源的分層分佈式命名系統。 它允許將IP地址轉換為域名，也可以將域名轉換為IP地址。 遠程桌面協議（RDP）是Microsoft開發的專有協議，它為用戶提供圖形界面以使用端口3389通過網絡連接連接到其他計算機。用戶為此目的使用RDP客戶端軟件，而另一台計算機必須運行RDP服務器軟件。 RDP是在telnet和SSH之上的巨大進步，因為您將獲得一個圖形化的環境來控制其他用戶的計算機，就像您坐在他們的Windows桌面前一樣。 \n Simple network management protocol (SNMP) is a popular protocol for network management. It is used for collecting information from and configuring network devices, such as servers, printers, hubs, switches, and routers, on an Internet protocol (IP) network. SNMP traffic is sent over port 161. \n 簡單網絡管理協議（SNMP）是一種流行的網絡管理協議。 它用於從Internet協議（IP）網絡上的服務器，打印機，集線器，交換機和路由器等網絡設備收集信息並對其進行配置。 SNMP通信通過端口161發送。 \n Server message block (SMB) is a network protocol used for providing shared access to files, printers, and serial ports and miscellaneous communications between nodes on a network using port 139. \n 服務器消息塊（SMB）是一種網絡協議，用於提供對文件，打印機和串行端口的共享訪問以及使用端口139的網絡上節點之間的其他通信。 \n The lightweight directory access protocol (LDAP) is a directory service protocol that runs over port 389. LDAP provides a mechanism used to connect to, search, and modify Internet directories. The LDAP directory service is based on a client-server model. \n 輕型目錄訪問協議（LDAP）是在端口389上運行的目錄服務協議。LDAP提供了一種用於連接，搜索和修改Internet目錄的機制。LDAP目錄服務基於客戶端-服務器模型。 \n Email \n 電子郵件 \n \n \n Email has evolved a lot over the years, but still operates on three main protocols. Simple mail transfer protocol (SMTP) is an Internet standard for sending email and most outbound email is sent using SMTP. SMTP uses port 25 to send email from network devices. \n 多年來，電子郵件已經有了很大的發展，但仍在三種主要協議上運行。 簡單郵件傳輸協議（SMTP）是用於發送電子郵件的Internet標準，大多數出站電子郵件都是使用SMTP發送的。 SMTP使用端口25從網絡設備發送電子郵件。 \n POP3 is the most common account type for personal email, but messages are typically deleted from the server when you check your email. \n POP3是最常見的個人電子郵件帳戶類型，但是當您檢查電子郵件時，通常會將郵件從服務器中刪除。 \n Internet message access protocol (IMAP) servers let you work with email messages without downloading them to your computer first. This allows for email to be synchronized (synced) across multiple devices, including your desktop, laptop, tablet, and smartphone. IMAP uses port 143 to receive and synchronize your email. The real benefit of using IMAP, especially in today’s multiple device access world, is that it can change the read and delete state of messages across the multiple devices. For example, if I read a message on my phone, when I log into my desktop, the message will also show as having been read already. \n Internet郵件訪問協議（IMAP）服務器使您可以處理電子郵件，而無需先將其下載到計算機上。 這允許跨多個設備（包括台式機，筆記本電腦，平板電腦和智能手機）同步電子郵件。 IMAP使用端口143接收和同步您的電子郵件。 使用IMAP的真正好處（尤其是在當今的多設備訪問世界中）是，它可以更改跨多個設備的消息的讀取和刪除狀態。 例如，如果我在手機上閱讀了一條消息，則當我登錄到桌面時，該消息也將顯示為已被閱讀。 \n", 'tags': '', 'url': 'Networking\xa0 Transfer Protocols.html'}, {'title': 'FTP', 'text': 'In the OSI (Open Systems Interconnection) model, the application layer uses protocols such as trivial file transfer protocol (TFTP), file transfer protocol (FTP), and file transfer protocol secure (FTPS using TLS/SSL) to allow users to migrate data in a client-server model. FTP concerns itself with data only and as such eliminates the overhead of extraneous information such as what HTTP allows in addition to the actual data (advertisements, banners, images, etc.). This alleviates processing and bandwidth overhead and allows the client to simply retrieve the data from the server. \n 在OSI（開放系統互連）模型中，應用程序層使用諸如簡單文件傳輸協議（TFTP），文件傳輸協議（FTP）和安全文件傳輸協議（使用TLS / SSL的FTPS）之類的協議來允許用戶遷移數據在客戶端-服務器模型中。 FTP僅關注數據本身，因此消除了額外信息的開銷，例如除了實際數據（廣告，橫幅，圖像等）外，HTTP允許的信息。 這減輕了處理和帶寬開銷，並使客戶端可以簡單地從服務器檢索數據。 \n \n FTP services can be accessed using client software such as ftp.exe (provided in all Microsoft operating systems), third-party software such as Filezilla or WinSCP, and any modern/current browser. Most light-duty users outside a corporate environment will not use a client FTP (or its secure version) because web browsers can negotiate FTP as well as HTTP. Public FTP servers allow for an anonymous user name so the client can reach file directories specifically designed for public access. \n \n 可以使用客戶端軟件（例如ftp.exe（在所有Microsoft操作系統中提供），第三方軟件（例如Filezilla或WinSCP）以及任何現代/最新的瀏覽器）訪問FTP服務。 公司環境之外的大多數輕型用戶都不會使用客戶端FTP（或其安全版本），因為Web瀏覽器可以協商FTP以及HTTP。 公用FTP服務器允許使用匿名用戶名，以便客戶端可以訪問專門為公用訪問而設計的文件目錄。 \n \n These network communications are passed through the presentation layer to the session layer, where sockets and sessions are created using logical port numbers as defined by TCP or UDP. TCP is stateful, connection-oriented and reliable. UDP is stateless, connectionless, and less reliable. The combination of source and destination address coupled with the logical port number creates a network socket, which establishes the session for process-to-process communication.\xa0 The material in this section is used under CC-BY license from\xa0 https://en.wikipedia.org/wiki/Transport_layer. \n \n 這些網絡通信通過表示層傳遞到會話層，在會話層中，使用由TCP或UDP定義的邏輯端口號創建套接字和會話。TCP是有狀態的，面向連接的且可靠的。UDP是無狀態，無連接且可靠性較低的。源地址和目標地址以及邏輯端口號的組合創建了一個網絡套接字，該網絡套接字建立了進程間通信的會話。 \xa0 本節中的材料根據https://en.wikipedia.org/wiki/Transport_layer的 CC-BY許可使用 。 \n Active vs. Passive \n Active FTP is a point-to-point connection that the client initiates and connects to the FTP server port 21 for commands and port 20 for data. That means that the server will actively initiate the connections back to the client’s listening port and will require the client to allow these connections, which the firewall blocks by default. Passive FTP allows the client to initiate the data connection on port 21, and then the FTP server moves the command and data connections to random ports on the server (with numbers higher than 1023). By initiating the connection from the client side, the burden of allowing a pass-through on the firewall resides with the FTP server administrator, who is better equipped to set a range of ports allowing connectivity. \n 主動FTP是點對點連接，客戶端啟動該點並連接到FTP服務器端口21（用於命令）和端口20（用於數據）。這意味著服務器將主動啟動回到客戶端偵聽端口的連接，並要求客戶端允許這些連接，防火牆默認情況下會阻止這些連接。被動FTP允許客戶端在端口21上啟動數據連接，然後FTP服務器將命令和數據連接移至服務器上的隨機端口（數字大於1023）。通過從客戶端啟動連接，防火牆上允許通過的負擔就由FTP服務器管理員承擔，後者可以更好地設置一系列允許連接的端口。 \n For more information on active vs. passive FTP, visit this  website. \n 有關主動與被動FTP的更多信息，請訪問此網站 。 \n Using FTP \n Accessing FTP public servers using the command line is not nearly as user-friendly as using a web browser. However, both methods are viable and in use in corporate networks. \n 使用命令行訪問FTP公共服務器並不像使用Web瀏覽器那樣友好。 但是，這兩種方法都是可行的，並且已在公司網絡中使用。 \n \n Open a web browser of choice \n 打開選擇的網絡瀏覽器 \n Use this URL: ftp.funet.fi \n 使用此URL：ftp.funet.fi \n Click “pubs,” then “standards,” then “RFC” \n 點擊“發布”，然後點擊“標準”，然後點擊“ RFC” \n Search RFC 959 and access either the .txt or .pdf file (left-click) \n 搜索RFC 959並訪問.txt或.pdf文件（單擊鼠標左鍵） \n Search RFC 4217 and access either the .txt or .pdf file (left-click) \n 搜索RFC 4217並訪問.txt或.pdf文件（單擊鼠標左鍵） \n If you actually needed the file you can right-click and save as. \n 如果您確實需要該文件，則可以右鍵單擊並另存為 \n \n Now that you see the file structure, notice it is similar to navigating a local hard drive with the only difference being that you use the “/” (forward slash) instead of the “\\” (backslash) because you are accessing the folders through the Internet. \n 現在您已經看到文件結構，請注意，它類似於瀏覽本地硬盤驅動器，唯一的區別是您使用“ /”（正斜杠）而不是“ \\”（反斜杠），因為您通過以下方式訪問文件夾互聯網。 \n Note: In this next step using the command-line interface, you will only be able to navigate the FTP server, and will not be able to transfer files, because ftp.exe does not support passive mode by default. You can use a command-line tool in a Linux Distro; or, in Windows, you can go to Passive-FTP.com and download the freeware. \n 注意：在接下來的使用命令行界面的步驟中，您將只能瀏覽FTP服務器，並且將無法傳輸文件，因為ftp.exe默認情況下不支持被動模式。您可以在Linux Distro中使用命令行工具。或者，在Windows中，您可以轉到Passive-FTP.com並下載免費軟件。 \n However, you can create a workaround by first allowing FTP through your firewall (be sure to put firewall restrictions back in place after the exercise), and then issuing the following commands after you enter the password: \n 但是，您可以通過首先允許FTP通過防火牆（確保在練習後將防火牆限制放回原位），然後在輸入密碼後發出以下命令來創建解決方法： \n \n quote pasv \n 引用pasv \n Now the “dir, ls” (list directory contents), and “get” (download) commands will work. \n 現在，“ dir，ls”（列出目錄內容）和“ get”（下載）命令將起作用。 \n By default, the file will download to your user root at C:\\Windows\\Users\\** your user name ** or at the root of C:\\ (wherever your OS is installed). \n 默認情況下，該文件將下載到用戶根目錄C：\\ Windows \\ Users \\ \xa0 **或 用戶名 **或C：\\根目錄（無論安裝了OS的位置）。 \n \n As a public FTP server set to passive mode, certain commands do not work and invoke the server to close the socket. If that happens, re-do your log on. \n 將公共FTP服務器設置為被動模式後，某些命令將不起作用，並調用服務器以關閉套接字。 如果發生這種情況，請重新登錄。 \n Use the keyboard command \xa0 \xa0 + r and type ftp (from an administrative command line interface you can also type ftp). The prompt changes to ftp> \n 使用鍵盤命令 + r並鍵入ftp（在管理命令行界面中，您也可以鍵入ftp）。 提示符更改為ftp> \n \n \n Type “help” and look at the commands. \n 輸入“ help”並查看命令。 \n Type at the command prompt: open ftp.funet.fi. \n 在命令提示符下鍵入：打開ftp.funet.fi。 \n Follow the prompts to log on. \n 按照提示進行登錄。 \n Username: anonymous. \n 用戶名：匿名。 \n Password: any generic e-mail (such as  user@user.com ) . \n 密碼：任何通用電子郵件（例如user@user.com）。 \n \n You get a welcome message and can now navigate through the directory structure you saw in the browser by typing the following commands: \n 您會收到一條歡迎消息，現在可以通過鍵入以下命令來瀏覽瀏覽器中看到的目錄結構： \n \n pwd — lists the current directory. \n \n pwd-列出當前目錄。 \n \n \n cd — changes the directory. This may be in the form of:\n \n cd pub (refer to the URL path from the previous exercise), or \n cd/pub/standards/RFC/ \n \n \n cd —更改目錄。可以採用以下形式： \n \n cd pub（請參閱上一練習中的URL路徑），或 \n cd / pub / standards / RFC / \n \n \n \n Now if you are using the workaround, Mac, or Linux you can download a file using the “get” command: \n 現在，如果您使用的是變通方法，Mac或Linux，則可以使用“ get”命令下載文件： \n \n Without the passive mode workaround, a third-party FTP client, Mac, or Linux this is as far as you can go. However, in the corporate environment you might be required to troubleshoot FTP on the local intranet, which would most likely be set to active FTP. Clearly, the need for command-line FTP service is fairly limited compared to using a browser. \n 如果沒有被動模式解決方法，則只能使用第三方FTP客戶端，Mac或Linux。 但是，在公司環境中，可能需要對本地Intranet上的FTP進行故障排除，這很可能會設置為活動FTP。 顯然，與使用瀏覽器相比，命令行FTP服務的需求非常有限。 \n \n \n SSL \n Secure sockets layer (SSL) is a cryptographic protocol designed to secure network communications at the application layer. Netscape developed the original protocol in 1995 and SSL became deprecated and was replaced by transport layer security (TLS) in 2015. For more information about SSL, visit this  website . \n 安全套接字層（SSL）是一種加密協議，旨在保護應用程序層的網絡通信安全。Netscape在1995年開發了原始協議，並且不贊成使用SSL，並在2015年由傳輸層安全性（TLS）取代。有關SSL的更多信息，請訪問此網站 。 \n The most common place to see TLS/SSL in action is in your web browser. For example, most all web sites now default from http (port 80) to https (port 443) with TLS. It is a client-server model where the client initiates the request to connect and the server offers the secure protocol. \n 實際使用TLS / SSL的最常見地方是您的Web瀏覽器。 例如，大多數網站現在默認使用TLS從http（端口80）更改為https（端口443）。 這是一種客戶端-服務器模型，其中客戶端發起連接請求，服務器提供安全協議。 \n Try this: \n 試試這個： \n \n Type: http://facebook.com or http://google.com into the browser of your choice. Notice the new URL changed to https. \n 在您選擇的瀏覽器中輸入：http://facebook.com或http://google.com。 請注意，新的URL更改為https。 \n \n \n Next, click on the padlock → connection. If you have an antivirus plug-in you might see the company’s certificate instead in browsers such as Internet Explorer. \n 接下來，單擊掛鎖→連接。 如果您具有防病毒插件，則可能會在Internet Explorer之類的瀏覽器中看到該公司的證書。 \n \n \n \n \n \n', 'tags': '', 'url': 'FTP.html'}]};