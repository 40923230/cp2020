<h1>First</h1>
<p><img alt="Computer Hardware/Personal Computer Hardware - Wikiversity" height="334" src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Personal_computer%2C_exploded_6.svg/1200px-Personal_computer%2C_exploded_6.svg.png" width="555"/></p>
<h1>HW1</h1>
<h2>PCH11</h2>
<h3>Fiber-Optic Cable</h3>
<p><span style="color: #ff0000;">Overview</span></p>
<div class="section" id="N1067F">
<div class="sectionContain">
<p id="N10685" lang="">In this module, we’re going to discuss the various types of network media. We will begin with fiber-optic cable and then discuss twisted pair cable and coaxial cable. For each of these cable types, we will discuss appearance, characteristics, and types of connectors, as well as speed and limitations.</p>
<p lang=""><span style="color: #ff0000;" title="快速向上滾動">總覽</span></p>
<p id="N10685" lang=""><span><span>在本模塊中，我們將討論各種類型的網絡媒體。</span><span>我們將從光纖電纜開始，然後討論雙絞線電纜和同軸電纜。</span><span>對於每種電纜類型，我們將討論連接器的外觀，特性和類型，以及速度和限制。</span></span></p>
<p lang=""><span style="color: #ff0000;">Fiber-Optic Cable</span></p>
</div>
</div>
<div class="section" id="fiber_cable">
<div class="sectionContain">
<p id="N10692" lang="">Fiber-optic cables are constructed by using a glass core at the center of the cable that is surrounded by cladding. In order to send data from one end of the cable to the other, light from a light-emitting diode (LED) or laser is used to transmit the signal down the glass fiber at the center of the cable. Because the data is being transmitted using light, it is immune to the effects of electromagnetic interference (EMI) that impact traditional copper-based cables, such as twisted pair and coaxial cables. Fiber-optic cables possess the ability to send the data a very far distance (many miles) without the use of a repeater. They also can carry a significant amount of data due to their large bandwidth and the information traveling at light speed. Their bandwidth can be measured in gigabits or even terabits per second. There are two types of fiber cables: multimode and single-mode fiber.</p>
<p lang=""><span style="color: #ff0000;" title="快速向上滾動">光纖電纜</span></p>
<p id="N10692" lang=""><span><span>光纖電纜是通過在電纜的中心使用玻璃芯構成的，該玻璃芯被包層圍繞。</span><span>為了將數據從電纜的一端發送到另一端，可使用來自發光二極管（LED）或激光的光沿電纜中心的玻璃纖維向下傳輸信號。</span><span>由於數據是通過光傳輸的，因此不受電磁干擾（EMI）的影響，電磁干擾會影響傳統的銅基電纜，如雙絞線和同軸電纜。</span><span>光纖具有無需使用中繼器就可以很遠的距離（許多英里）發送數據的能力。</span><span>由於它們的大帶寬和以光速傳播的信息，它們還可以攜帶大量數據。</span><span>它們的帶寬可以每秒千兆比特或什至兆兆比特來度量。</span></span></p>
<span class="imagewrap"><span class="imagewrap"><span class="image"><span>                 </span><img alt="Photograph of two cables, one with a red end and the other with a black end. Both have a silver connection with a cylindrical core protruding from the connector." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image1.png" title="Photograph of two cables, one with a red end and the other with a black end. Both have a silver connection with a cylindrical core protruding from the connector."/></span><span class="caption" lang=""></span></span></span>
<p id="N1069A" lang="">Fiber-optic cable. Photo used under CC-BY-NC-ND license from<span> Craig Rodway</span>.</p>
<p id="N106A2" lang="">Multimode fiber cables (MMF) contain a larger core than the single-mode variety. The core size for a multimode fiber is 62.5 microns. A micron is a very small unit of measurement—it is actually even smaller than the width of a human hair. MMF’s larger core enables multiple modes of travel for the light from one end of the cable to the other. This allows a single fiber to carry multiple signals across it, with each signal being transmitted at a slightly different reflective angle. When the light reaches the destination, the signals are then converted back into 1s and 0s and passed to the computer by the network interface card. Multimode fiber is commonly used in shorter distance fiber connections, such as from a router to a switch, a switch to a switch, or a server to a switch.</p>
<p id="N106A5" lang="">Single-mode fiber cables (SMF) contain a much smaller core than the multimode variety. The core size for SMF is 10 microns. SMF’s smaller core only allows for a single mode of travel for the light from one end of the cable to the other. This straight-through connection allows for data to travel longer distances without a repeater than it can travel using MMF. When the light reaches the destination, the signals are then converted back into 1s and 0s and passed to the computer by the network interface card. Single mode fiber is commonly used in very long distance fiber connections, such as a backbone connection from one local area network to another.</p>
<p id="N106A2" lang=""><span>多模光纜（MMF）的芯線比單模光纜大。多模光纖的纖芯尺寸為62.5微米。微米是非常小的度量單位，實際上甚至比人類頭髮的寬度還小。MMF的較大芯線實現了從電纜一端到另一端的多種傳播模式。這樣一來，單根光纖就可以在其上傳輸多個信號，而每個信號都以稍微不同的反射角傳輸。當光線到達目的地時，信號然後被轉換回1和0，並通過網絡接口卡傳遞到計算機。多模光纖通常用於較短距離的光纖連接中，例如從路由器到交換機，從交換機到交換機或從服務器到交換機。</span></p>
<p id="N106A5" lang=""><span><span>單模光纜（SMF）的芯線比多模光纜小得多。</span><span>SMF的芯尺寸為10微米。</span><span>SMF的較小芯線僅允許光從電纜一端到另一端的單一傳播模式。</span><span>這種直通連接允許數據在沒有中繼器的情況下傳輸的距離比使用MMF傳輸的距離更長。</span><span>當光線到達目的地時，信號然後被轉換回1和0，並通過網絡接口卡傳遞到計算機。</span><span>單模光纖通常用於超長距離的光纖連接中，例如從一個局域網到另一個局域網的骨干連接。</span></span></p>
<p lang=""><span style="color: #ff0000;">Fiber-Optic Cable Connectors</span></p>
</div>
</div>
<div class="section" id="fiber_connectors">
<div class="sectionContain">
<p id="N106B2" lang=""><span style="color: #000000;">Fiber cables only come in the two types discussed above: single-mode and multimode. However, the ends of each of these cables come in four varieties.</span></p>
<p id="N106B5" lang=""><span style="color: #000000;">The subscriber connector (SC) is a fiber-optic cable connector that uses a push-pull mechanism to latch into the port, similar to common audio and video cables. If you want to enable bidirectional transmission for sending and receiving data, you need to have two fiber cables, so sometimes a dual SC connector is used.</span></p>
<p id="N106B8" lang=""><span style="color: #000000;">The straight tip (ST) connector is a fiber-optic cable connector that uses a bayonet plug and socket. It was the first de facto standard connector for most commercial wiring using fiber cables and it is very commonly found in fiber networks.</span></p>
<p id="N106BB" lang=""><span style="color: #000000;">The Lucent connector (LC) is a miniaturized version of the fiber-optic SC connector. It looks somewhat like the SC, but is half the size, with a 1.25 mm ferrule instead of 2.5 mm, making it very useful when connecting multiple devices in a small area, such as on a 24-port switch’s front panel.</span></p>
<p id="N106BE" lang=""><span style="color: #000000;">The mechanical transfer-registered jack (MT-RJ) connector is a fiber-optic cable connector that is very popular for small-form-factor devices due to its small size. This connector houses two fibers and mates with locating pins on the plug. These connectors are commonly found connecting a switch to a patch panel, because both devices have a limited area on their front panels.</span></p>
<p lang=""><span style="color: #ff0000;" title="快速向上滾動">光纖電纜連接器</span></p>
<p id="N106B2" lang=""><span style="color: #000000;">光纖電纜僅屬於上述兩種類型：單模和多模。但是，每條電纜的末端都有四種。</span></p>
<p id="N106B5" lang=""><span style="color: #000000;">用戶連接器（SC）是一種光纖電纜連接器，類似於普通的音頻和視頻電纜，它使用推挽機制鎖入端口。如果要啟用雙向傳輸以發送和接收數據，則需要兩條光纖電纜，因此有時會使用雙SC連接器。</span></p>
<p id="N106B8" lang=""><span style="color: #000000;">筆直（ST）連接器是使用卡口插頭和插座的光纖電纜連接器。它是大多數使用光纖電纜進行商業佈線的第一個事實上的標準連接器，在光纖網絡中非常常見。</span></p>
<p id="N106BB" lang=""><span style="color: #000000;">朗訊連接器（LC）是光纖SC連接器的微型版本。它看上去有點像SC，但尺寸只有一半，只有1.25毫米而不是2.5毫米的插芯，因此在小區域（例如24端口交換機的前面板）連接多個設備時非常有用。</span></p>
<p id="N106BE" lang=""><span style="color: #000000;">機械傳輸註冊插孔（MT-RJ）連接器是一種光纖電纜連接器，由於其尺寸小，在小型設備中非常受歡迎。該連接器容納兩根光纖，並與插頭上的定位銷配對。通常發現這些連接器將開關連接到配線架，因為兩個設備的前面板都有有限的區域。</span></p>
<div actguid="d87f2edc0a0001dc03ea0c83c3b8dbae" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2edc0a0001dc03ea0c83c3b8dbae&amp;userGUID=3c9a7afd0a0001dc2cdb0ed65c281383&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch11_lbd03">
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch11_lbd03">
<div class="page 482563" id="opch11_lbd03">
<div class="question ddfb" id="482563">
<div>
<p id="N10065" lang=""><span style="color: #000000;">Drag and drop the connector name to match the image of its corresponding connector.</span></p>
<div class="customActivityHolder" data-showinputs="false" height="477" id="custom-482563" layout="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/pch11_lbd03_layout.xml" source="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/webcontent/DragDropWrapper.js" type="javascript" width="550">
<div>
<div class="component">
<table border="0" cellspacing="4" width="100%">
<tbody>
<tr>
<td><span style="color: #000000;"><em>Connector Image</em></span></td>
<td><span style="color: #000000;"><em>Connector name</em></span></td>
</tr>
<tr>
<td><span style="color: #000000;"><img alt="Photograph of four connectors. Each are blue and have a square end with a
                    circular cavity and a cylindrical core protrusion.  Photo used under CC-BY-NC-ND license from PressReleaseFinder (https://flic.kr/p/8Dkc42)." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image2.png"/></span></td>
<td>
<div class="target" input_ref="target1">
<div class="initiator" input_val="drag1"><span style="color: #000000;">SC</span></div>
</div>
</td>
</tr>
<tr>
<td><span style="color: #000000;"><img alt="Photograph of
                    two yellow cables with white connectors. At the very tip of the connector there
                    are blue ends. These ends are plugged into the back of a device.  Photo used under CC-BY license from Robert (https://flic.kr/p/cs6brY)." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image3.png"/></span></td>
<td>
<div class="target" input_ref="target2">
<div class="initiator" input_val="drag2"><span style="color: #000000;">LC</span></div>
</div>
</td>
</tr>
<tr>
<td><span style="color: #000000;"><img alt="Photograph of two gray cables. One cable has a black end with a silver
                    connector. The other has a red end with a silver connector. The connectors for
                    both are round with a white cylindrical core protruding.  Photo used under CC-BY-NC-ND license from Craig Rodway (https://flic.kr/p/4nU4yM)." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image4.png"/></span></td>
<td>
<div class="target" input_ref="target3">
<div class="initiator" input_val="drag3"><span style="color: #000000;">ST</span></div>
</div>
</td>
</tr>
<tr>
<td><span style="color: #000000;"><img alt="Photograph of orange cable
                    with white end and black rectangular connector.   Copyright 123 RF (http://www.123rf.com/)." src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image5.jpeg"/></span></td>
<td>
<div class="target" input_ref="target4">
<div class="initiator" input_val="drag4"><span style="color: #000000;">MT-RJ</span></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
<div class="input_source">
<p></p>
<h3>Twisted Pair Cable</h3>
</div>
</div>
</div>
</div>
<div class="feedback clearfix ref-target4 correct">
<p id="N1068B" lang=""><span style="color: #000000;">While fiber-optic cable is great for its speed, distance, and security, it hasn’t yet become commonplace in most networks. Instead, we are still using the same type of cabling we have been using for the past two to three decades — twisted pair. Twisted pair cable is the most popular physical LAN media in the world today. Each cable contains four pairs of individually insulated strands of copper wire. Each pair is twisted together to minimize the amount of electromagnetic interference (EMI). The more twists there are in the cable, the less EMI there will be. Twisted pair cable is broken up into two types: unshielded twisted pair (UTP) and shielded twisted pair (STP).</span></p>
<p lang=""><span style="color: #ff0000;">雙絞線</span></p>
<p lang=""><span style="color: #000000;">儘管光纜在速度，距離和安全性方面都非常出色，但在大多數網絡中尚未普及。相反，我們仍在使用過去兩到三十年來一直使用的相同類型的電纜-雙絞線。雙絞線電纜是當今世界上最流行的物理LAN介質。每條電纜包含四對獨立絕緣的銅線。每對絞合在一起以最大程度地減少電磁干擾（EMI）。電纜中的扭曲越多，EMI越小。雙絞線分為兩種類型：非屏蔽雙絞線（UTP）和屏蔽雙絞線（STP）。</span></p>
<span class="imagewrap" style="color: #000000;"><span class="imagewrap"><span class="image">                                  <img alt="Photograph of connector. The end is transparent plastic and cables and copper connections are visible." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image6.png" title="Photograph of connector. The end is transparent plastic and cables and copper connections are visible."/></span><span class="caption" lang=""></span></span></span>
<p id="N10694" lang=""><span style="color: #000000;">Fiber-optic connector. Photo used under CC-BY-NC-ND license from Jonathan Ah Kit<a href="https://flic.kr/p/2QT3Z" id="_i_1" lang="" style="color: #000000;" target="_blank">.</a></span></p>
<p id="N1069C" lang=""><span style="color: #000000;">Shielded twisted pair cable is built very similarly to unshielded twisted pair, except that the pairs of wires are also surrounded by a metallic shielding (like foil). This outer foil shielding minimizes the EMI to which the cable is exposed. This increases the security and reliability of the cable. Unfortunately, however, this also increases the cost of the cable, so it is typically used only in high-production environments where the extra security is worth the extra cost.</span></p>
<p id="N1069F" lang=""><span style="color: #000000;">The more common type of cabling is unshielded twisted pair cable. Instead of using extra shielding, this cable relies on the twisting of its copper pairs to minimize the effects of EMI. Each twisted pair is twisted to insulate itself from the other pairs, and because there is no additional shielding, it is available at a lower cost than STP. Therefore, UTP is the most common media of choice for small office, home office, residential, and many commercial networks.</span></p>
<p id="N1069C" lang=""><span style="color: #000000;">屏蔽雙絞線電纜的構造與非屏蔽雙絞線非常相似，不同之處在於，成對的電線也被金屬屏蔽層（如金屬箔）圍繞。外部箔屏蔽層可最大程度地減小電纜所遭受的EMI。這增加了電纜的安全性和可靠性。但是，不幸的是，這也增加了電纜的成本，因此通常僅在高生產環境中使用，在這種環境中，額外的安全性值得額外的成本。</span></p>
<p id="N1069F" lang=""><span style="color: #000000;">電纜的最常見類型是非屏蔽雙絞線電纜。該電纜不使用額外的屏蔽，而是依靠其銅線對的絞合來最大程度地減小EMI的影響。每個雙絞線都經過絞合，以使其自身與其他雙絞線絕緣，並且由於沒有額外的屏蔽，因此可以以比STP更低的成本獲得。因此，UTP是小型辦公室，家庭辦公室，住宅和許多商業網絡的最常見選擇媒體。</span></p>
<span class="imagewrap" style="color: #000000;"><span class="imagewrap"><span class="image">                  <img alt="Photograph of a blue cable with part of the sheathing removed. Inside, there are four twisted pair cables: green and white, orange and white, blue and white, and brown and white. The four twisted pairs are also twisted together." class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image7.png" title="Photograph of a blue cable with part of the sheathing removed. Inside, there are four twisted pair cables: green and white, orange and white, blue and white, and brown and white. The four twisted pairs are also twisted together."/></span></span></span></div>
<div class="feedback clearfix ref-target4 correct" style="text-align: left;"><span class="imagewrap" style="color: #ff0000;"><span class="imagewrap"><span class="image">Categorizing Twisted Pair Cable</span></span></span>
<div class="section" id="categorizing_twisted_pair">
<div class="sectionContain">
<p id="N106B9" lang="" style="text-align: left;"><span style="color: #000000;">Twisted pair cable is categorized based on a category (cat) number. For example, cat 3, or category 3, is the oldest type of cable that we use. It was introduced back in the 1980s and 1990s for use in the first star topologies. The maximum throughput or bandwidth of cat 3 cabling is only 10 Mbps (megabits per second). The cat 3, like all twisted pair cabling, cannot go farther than 100 meters without using a repeater, switch, or active hub to amplify the signal. This limited distance is attributable to the copper wiring in these cables. As the signal travels over the copper wire, the natural resistance to the wire decreases the signal’s strength, and it eventually becomes too weak for the distant end to receive. For this reason, there is a 100 meter limitation when building and designing a twisted pair network.</span></p>
<p id="N106BC" lang="" style="text-align: left;"><span style="color: #000000;">Cat 5 cables were an improvement on the older cat 3 cables and contain more twists, giving them more shielding from EMI and a maximum bandwidth of 100 Mbps. Cat 5e, or cat 5 enhanced, increased the speed of the maximum throughput to one Gbps, or 1000 Mbps, and became a gap filler until cat 6 cabling became commonplace.</span></p>
<p id="N106BF" lang="" style="text-align: left;"><span style="color: #000000;">Cat 6a overcomes the 37-55 meter limitation of cat 6 when used in 10GBaseT. Cat 7, the newest standard, is shielded and provides connections up to 10 Gbps with a maximum distance of 100 meters. “Cat 7 and cat 7a cabling will be used for backbone connections between servers within a data center” and “provide an alternative to using fiber-optic cabling within the data center” (fromhttp://www.cablestogo.com/learning/library/data-center/cat7-overview).</span></p>
<p lang="" style="text-align: left;"><span style="color: #000000;">All cable categories up to cat 5e and cat 6a have a maximum distance of 100 meters. When used in 10GBaseT, the maximum distance for cat 6 is 55 meters. Cat 7 is shielded and exceeds the 100 meter limit. As the category of the cable increases, so do the number of twists per inch and the frequency range, allowing for more data and improved protection against EMI. Best practice for copper cabling is <em class="italic" lang="">not </em>to run cable lengths to the maximum because attenuation will reduce data capacity.</span></p>
<p lang="" style="text-align: left;"><span style="color: #ff0000;" title="快速向上滾動">分類雙絞線電纜</span></p>
<p id="N106B9" lang="" style="text-align: left;"><span style="color: #000000;">雙絞線電纜根據類別（類別）編號進行分類。例如，類別3（或類別3）是我們使用的最古老的電纜類型。它是在1980年代和1990年代引入的，用於第一批星形拓撲。Cat 3電纜的最大吞吐量或帶寬僅為10 Mbps（兆位/秒）。與所有雙絞線電纜一樣，如果不使用中繼器，交換機或有源集線器來放大信號，則Cat 3不能走超過100米。這種有限的距離歸因於這些電纜中的銅線。當信號在銅線上傳輸時，導線的自然電阻會降低信號的強度，並且最終變得太弱而無法接收遠端。為此原因，</span></p>
<p id="N106BC" lang="" style="text-align: left;"><span style="color: #000000;">Cat 5電纜是對較舊的Cat 3電纜的改進，並包含更多的絞合線，從而使它們具有更大的EMI屏蔽能力，最大帶寬為100 Mbps。Cat 5e或Cat 5增強後，將最大吞吐量的速度提高到1 Gbps或1000 Mbps，並成為了空白，直到Cat 6電纜變得司空見慣。</span></p>
<p id="N106BF" lang="" style="text-align: left;"><span style="color: #000000;">當在10GBaseT中使用時，Cat 6a克服了Cat 6的37-55米的限制。最新標準Cat 7被屏蔽，並提供高達10 Gbps的連接，最大距離為100米。“ Cat 7和Cat 7a電纜將用於數據中心內服務器之間的主干連接”，並且“提供在數據中心內使用光纖電纜的替代方法”（來自http://www.cablestogo.com/learning/library/data-center/cat7-overview）。</span></p>
<p id="N106C8" lang="" style="text-align: left;"><span style="color: #000000;">直至Cat 5e和Cat 6a為止的所有電纜類別的最大距離為100米。在10GBaseT中使用時，類別6的最大距離為55米。Cat 7被屏蔽並超過了100米的限制。隨著電纜類別的增加，每英寸的捻數和頻率範圍也會增加，從而可以提供更多的數據並改善對EMI的保護。銅纜佈線的最佳實踐是<em class="italic" lang="">不要</em>使電纜長度最大，因為衰減會降低數據容量。</span></p>
<table align="center" cellspacing="0" class="wbtable" lang="" style="float: left;">
<thead>
<tr>
<th lang=""><span style="color: #000000;"><em class="bold" lang="">Category</em></span></th>
<th lang=""><span style="color: #000000;"><em class="bold" lang="">Maximum Throughput</em></span></th>
<th lang=""><span style="color: #000000;"><em class="bold" lang="">LAN Application</em></span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">Cat 3</span></th>
<th lang=""><span style="color: #000000;">10Mbps</span></th>
<th lang=""><span style="color: #000000;">10BaseT; 100BaseT4deprecated</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">Cat 5</span></th>
<th lang=""><span style="color: #000000;">100Mbps</span></th>
<th lang=""><span style="color: #000000;">10/100/1000BaseT100/1000BaseTX</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">Cat 5e</span></th>
<th lang=""><span style="color: #000000;">1Gbps (1000Mbps)</span></th>
<th lang=""><span style="color: #000000;">10/100/1000BaseT100/1000BaseTX</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">Cat 6</span></th>
<th lang=""><span style="color: #000000;">1Gbps (1000Mbps)</span></th>
<th lang=""><span style="color: #000000;">10/100/1000BaseT100/1000BaseTX10GBaseT</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">Cat 6a</span></th>
<th lang=""><span style="color: #000000;">10Gbps</span></th>
<th lang=""><span style="color: #000000;">10/100/1000BaseT100/1000/BaseTX10GBaseT</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">Cat 7</span></th>
<th lang=""><span style="color: #000000;">10Gbps</span></th>
<th lang=""><span style="color: #000000;">10/100/1000BaseT100/1000/BaseTX10GBaseT</span></th>
</tr>
</thead>
<tbody></tbody>
</table>
</div>
</div>
<div class="section" id="N1072E">
<div class="sectionContain">
<table align="center" cellspacing="0" class="wbtable" lang="">
<thead>
<tr>
<th lang=""><span style="color: #000000;"><em class="bold" lang="">類別</em></span></th>
<th lang=""><span style="color: #000000;"><em class="bold" lang="">最大吞吐量</em></span></th>
<th lang=""><span style="color: #000000;"><em class="bold" lang="">局域網應用</em></span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">3</span></th>
<th lang=""><span style="color: #000000;">10Mbps</span></th>
<th lang=""><span style="color: #000000;">10BaseT; 不推薦使用100BaseT4</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">5</span></th>
<th lang=""><span style="color: #000000;">100Mbps</span></th>
<th lang=""><span style="color: #000000;">10/100 / 1000BaseT100 / 1000BaseTX</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">5e</span></th>
<th lang=""><span style="color: #000000;">1Gbps（1000Mbps）</span></th>
<th lang=""><span style="color: #000000;">10/100 / 1000BaseT100 / 1000BaseTX</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">6</span></th>
<th lang=""><span style="color: #000000;">1Gbps（1000Mbps）</span></th>
<th lang=""><span style="color: #000000;">10/100 / 1000BaseT100 / 1000BaseTX10GBaseT</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">6a</span></th>
<th lang=""><span style="color: #000000;">10Gbps</span></th>
<th lang=""><span style="color: #000000;">10/100 / 1000BaseT100 / 1000 / BaseTX10GBaseT</span></th>
</tr>
<tr>
<th lang=""><span style="color: #000000;">7</span></th>
<th lang=""><span style="color: #000000;">10Gbps</span></th>
<th lang=""><span style="color: #000000;">10/100 / 1000BaseT100 / 1000 / BaseTX10GBaseT</span></th>
</tr>
</thead>
</table>
<p><span style="color: #ff0000;" title="Quick scroll up">Twisted Pair Connectors</span></p>
<p id="N10735" lang="" style="text-align: left;"><span style="color: #000000;">Twisted pair cables come with three main types of connectors. The first is the RJ-45 connector, which is an eight-pin connector used in Ethernet networks. Even though most Ethernet networks use only four pins, the RJ-45 provides eight pins for future use and capabilities. The first four pins are used to transmit (two pins) and receive (two pins).</span></p>
<p id="N10738" lang="" style="text-align: left;"><span style="color: #000000;">The RJ-11 connector is used in the standard telephone system. The RJ-11 is a six-pin connector, but commonly only two pins are used for a telephone (transmit and receive). If you have a two-line phone, then four pins are used: two pins to transmit and two pins to receive.</span></p>
<p id="N1073B" lang="" style="text-align: left;"><span style="color: #000000;">Finally, the DB-9 connector is used for RS-232 signals. This connector looks like a standard serial connector. It is used commonly for asynchronous serial communications, like connecting to an external modem. In modern networks, you will see this type of connector on a “rollover cable.” A rollover cable has a DB-9 on one side (which is connected to your laptop’s serial port), and an RJ-45 connector on the other side (which is used to connect to Cisco routers and switches to do administration tasks).</span></p>
<p lang="" style="text-align: left;"><span style="color: #000000;">A straight-through cable is a type of twisted pair cable that is used in local area networks to connect a computer to a network hub, such as a router. This type of cable is also sometimes called a patch cable. Both ends of the cable have an identical pinout, hence the name “straight-through.” A crossover cable switches the pinouts of the two ends of the cable, making the transmit and receive pins alternate on the two ends. This allows two workstations to connect directly to each other without the need for a hub, switch, or router.</span></p>
<p lang="" style="text-align: left;"><span style="color: #ff0000;" title="快速向上滾動">雙絞線連接器</span></p>
<p id="N10735" lang="" style="text-align: left;"><span style="color: #000000;">雙絞線電纜帶有三種主要類型的連接器。第一個是RJ-45連接器，它是以太網網絡中使用的八針連接器。即使大多數以太網僅使用四個引腳，RJ-45仍提供八個引腳以供將來使用和使用。前四個引腳用於發送（兩個引腳）和接收（兩個引腳）。</span></p>
<p id="N10738" lang="" style="text-align: left;"><span style="color: #000000;">RJ-11連接器用於標準電話系統。RJ-11是一個六針連接器，但電話通常僅使用兩個針（發送和接收）。如果您有兩線電話，則使用四個引腳：兩個引腳用於發送，兩個引腳用於接收。</span></p>
<p id="N1073B" lang="" style="text-align: left;"><span style="color: #000000;">最後，DB-9連接器用於RS-232信號。該連接器看起來像標準的串行連接器。它通常用於異步串行通信，例如連接到外部調製解調器。在現代網絡中，您將在“翻轉電纜”上看到這種類型的連接器。翻轉電纜的一側為DB-9（連接到筆記本電腦的串行端口），另一側為RJ-45連接器（用於連接到Cisco路由器和交換機以執行管理任務）。</span></p>
<p id="N1073E" lang="" style="text-align: left;"><span style="color: #000000;">直通電纜是雙絞線電纜的一種，在局域網中用於將計算機連接到網絡集線器（例如路由器）。此類電纜有時也稱為跳線。電纜的兩端都具有相同的引出線，因此名稱為“直通”。交叉電纜切換電纜兩端的引腳分配，使發送和接收引腳在兩端交替。這允許兩個工作站直接相互連接，而無需集線器，交換機或路由器。</span></p>
<span class="imagewrap" style="color: #000000;"><span class="imagewrap"><span class="image"><img alt="Photograph of a cable with clear plastic, rectangular connectors." class="popimg" id="_i_5" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image8.png" title="Photograph of a cable with clear plastic, rectangular connectors."/></span></span></span>
<p></p>
<p></p>
<div class="activityhead">
<h3>Coaxial Cable</h3>
<p id="N10690" lang="" style="text-align: left;"><span style="color: #000000;">Coaxial cable is a much older media technology. Coaxial cable, also known as coax for short, is composed of two conductors. The inner conductor, which is known as the insulated conductor (center wire), is the copper wire over which data is passed. The outer conductor is the braided metal shield and aids in protecting the inner wire from physical injury and the effects of EMI. Much like the shielding we saw in shielded twisted pair, the outer shield helps keep electromagnetic interference out of the data’s path. Between the inner conductor and the outer shield, we find an insulated core that prevents any data transfer between the inner core and outer shield. The outside of the cable is made of a flexible plastic jacket, much like the twisted pair cabling. Coaxial cabling was included in the first Ethernet standard as 10Base5 (thicknet) and continued to be used throughout updates as 10Base2 (thinnet) as well as being most commonly used in bus and ring networks. UTP cabling however, is easier to work with in a star topology and is significantly less expensive.</span></p>
<span class="imagewrap" style="color: #000000;"><span class="imagewrap"><span class="image"><img alt="Image of a black cable with connector. The ring securing the cable to the connector is removed to expose the braided metal shield. The connector is gold with a white tip. A copper cable is protruding from the tip." class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image9.png" title="Image of a black cable with connector. The ring securing the cable to the connector is removed to expose the braided metal shield. The connector is gold with a white tip. A copper cable is protruding from the tip."/></span></span></span></div>
<p></p>
<p><span class="imagewrap" style="color: #000000;"><span class="imagewrap"><span class="caption" lang=""></span></span></span></p>
<p id="N10690" lang="" style="text-align: left;"><span style="color: #000000;">同軸電纜是一種較老的媒體技術。同軸電纜，也簡稱為同軸電纜，由兩個導體組成。內部導體（稱為絕緣導體（中心線））是在其上傳遞數據的銅線。外導體是編織的金屬屏蔽層，有助於保護內線免受物理傷害和EMI的影響。就像我們在屏蔽雙絞線中看到的屏蔽一樣，外部屏蔽有助於將電磁干擾保持在數據路徑之外。在內部導體和外部屏蔽層之間，我們找到了一個絕緣芯，可防止在內芯和外部屏蔽層之間進行任何數據傳輸。電纜的外部由柔軟的塑料護套製成，非常類似於雙絞線電纜。同軸電纜已包含在第一個以太網標準中，稱為10Base5（Thicknet），並在整個更新中繼續用作10Base2（Thinnet），並且在總線和環形網絡中最常用。但是，UTP電纜更易於在星形拓撲中使用，並且價格便宜得多。</span></p>
<p lang="" style="text-align: left;"><span style="color: #ff0000;">Coaxial Cable Types</span></p>
<div class="section" id="N106A2" style="text-align: left;">
<div class="sectionContain">
<p lang=""><span style="color: #000000;">There are three dominant coaxial cable types. The RG-6 is commonly used by cable TV companies to connect individual homes to the TV network. These cables are thick and usually used for outside connections to withstand the effects of the weather. The RG-58 is a type of coaxial cable that was heavily used in early 10Base2 (thinnet) networks, such as bus and ring topologies. Finally, the RG-59 is the traditional coaxial cable used to carry composite video between two nearby devices, such as your TV and the cable box. If you are a cable Internet user, this is also used to carry the WAN connection from your wall jack to your cable modem.</span></p>
<p lang=""><span style="color: #ff0000;" title="快速向上滾動">同軸電纜類型</span></p>
<p id="N106A9" lang=""><span><span>共有三種主要的同軸電纜類型。</span><span>有線電視公司通常使用RG-6將單個房屋連接到電視網絡。</span><span>這些電纜很粗，通常用於外部連接以承受天氣的影響。</span><span>RG-58是一種同軸電纜，在諸如總線和環形拓撲之類的早期10Base2（瘦網）網絡中大量使用。</span><span>最後，RG-59是傳統的同軸電纜，用於在兩個附近的設備（例如電視和電纜盒）之間傳送複合視頻。</span><span>如果您是有線Internet用戶，這也可用於將WAN連接從牆壁插孔連接到電纜調製解調器。</span></span></p>
<p lang=""><span style="color: #ff0000;">Coaxial Cable Connectors</span></p>
</div>
</div>
<div class="section" id="N106AE">
<div class="sectionContain">
<p id="N106B5" lang="" style="text-align: left;"><span style="color: #000000;">While there were three types of cables, there are only two types of common connectors used with coaxial cable. The first is called BNC, from the name Bayonet Neill-Concelman. Sometimes people also call this the British Naval connector, because the BNC was heavily used by the British in their shipboard radio systems. This connector was commonly used in early Ethernet networks and it has a “push and twist” type of connector to secure the cable to the network device.</span></p>
<p lang="" style="text-align: left;"><span style="color: #000000;">The F-type connector is the modern type of coaxial cable connector. It is typically used for cable TV and cable modem connections. It is connected by screwing the connector onto a threaded jack to secure the connection.</span></p>
<p lang="" style="text-align: left;"><span style="color: #ff0000;" title="快速向上滾動">同軸電纜連接器</span></p>
<p id="N106B5" lang=""><span><span>雖然有三種類型的電纜，但同軸電纜僅使用兩種類型的普通連接器。</span><span>第一個稱為BNC，名稱為刺刀Neill-Concelman。</span><span>有時人們也將其稱為英國海軍連接器，因為英國人在其艦載無線電系統中大量使用了BNC。</span><span>該連接器通常用於早期的以太網網絡，並且具有“推壓式”連接器，用於將電纜固定至網絡設備。</span></span></p>
<p id="N106B8" lang=""><span><span>F型連接器是現代類型的同軸電纜連接器。</span><span>它通常用於有線電視和電纜調製解調器的連接。</span><span>通過將連接器擰到帶螺紋的插孔上進行連接以固定連接。</span></span></p>
<span class="imagewrap" style="color: #000000;"><span class="image"><img alt="Photograph of a wall plate with five coaxial jacks. A coaxial cable with a blue band at the end is connected to one of the jacks." class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH11/webcontent/PCH11/image10.png" title="Photograph of a wall plate with five coaxial jacks. A coaxial cable with a blue band at the end is connected to one of the jacks."/></span></span></div>
</div>
<div actguid="d87f2edf0a0001dc0f4a70a832ff38b0" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2edf0a0001dc0f4a70a832ff38b0&amp;userGUID=40923230%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch11_digt01">
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch11_digt01">
<div class="page 84905 482672 482673 482674 482675" id="opch11_digt01">
<div class="question ddfb" id="482675">
<div class="feedback clearfix ref-i1 correct">
<div class="response">
<div class="title"></div>
<h3>Copper vs. Fiber</h3>
<div class="title"></div>
<div class="title"><a class="md-activity oneclick" href="https://oli.cmu.edu/jcourse/workbook/activity/page?context=d87f2ed90a0001dc7849947ae80ecca2"></a>When we compare the advantages and disadvantages of fiber-optic cables and copper (twisted pair) cables, we have to consider that fiber-optic has a higher bandwidth (measured in Gbps or Tbps), it can carry its signal many miles without the need of a repeater, it is immune to the effects of EMI, and it has much better security than traditional twisted pair cables. However, twisted pair cabling does hold some advantages of its own. For one, it is much less expensive than fiber-optic cabling. Also, copper wiring is much easier to install, taking only a few hours to learn. Finally, twisted pair cabling can be created and terminated using inexpensive tools. For example, a complete copper wiring toolset can be bought online for less than $50, while a complete fiber-optic kit may cost $1000 or more. For these reasons, copper has remained the dominant media in most local area networks.</div>
<div class="title"><span>當我們比較光纖電纜和銅纜（雙絞線）的優缺點時，我們必須考慮到光纖具有更高的帶寬（以Gbps或Tbps為單位），它可以將其信號傳輸很多英里而無需作為中繼器，它不受EMI的影響，並且比傳統的雙絞線電纜具有更好的安全性。</span><span>但是，雙絞線電纜確實具有其自身的一些優點。</span><span>首先，它比光纖電纜便宜得多。</span><span>而且，銅線的安裝更容易，只需幾個小時即可學習。</span><span>最後，可以使用廉價的工具創建和終止雙絞線電纜。</span><span>例如，一套完整的銅線工具套件可以在線購買，價格不到50美元，而一套完整的光纖套件的價格可能在1000美元以上。</span><span>由於這些原因，</span></div>
<div actguid="d87f2eee0a0001dc7b773ebfe4b2e8da" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2eee0a0001dc7b773ebfe4b2e8da&amp;userGUID=40923230%40gm.nfu.edu.tw&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch11_digt03">
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch11_digt03">
<div class="page 84904 482617 482618 482619 482620 482621 482622" id="opch11_digt03">
<div class="question ddfb" id="482622">
<div>
<h3>Converters</h3>
<p id="N10678" lang="">Because of the wide variety of cable and connector types, there is sometimes a need to convert from one type of media to another. For example, if you have to make a connection between two LANs in buildings that are located one mile apart, but your network uses Cat 5e, UTP cabling, how can you make that connection? When you look at your routers, you find they only accept RJ-45 connections, but you know that you cannot run a Cat 5e cable more than 100 meters. How can you solve this problem? With a media converter.</p>
<p id="N1067B" lang="">Using a media converter, you can convert your RJ-45 connection into an ST, SC, or LC fiber connection, as shown in the image below. Then, you run the one-mile fiber cable to the other building, and use a media converter to convert from the ST, SC, or LC fiber connection back to the RJ-45 the other router requires. Because this is a simple, “dumb” device, it simply converts whatever is received on the first media type and repeats it back out the second media type. Common types of media converters are from Ethernet (copper) to fiber-optic (and back) or coaxial to fiber-optic (and back).</p>
<p id="N10678" lang=""><span>由於電纜和連接器的類型多種多樣，因此有時需要從一種類型的媒體轉換為另一種類型的媒體。例如，如果您必須在相距一英里的建築物中的兩個LAN之間建立連接，但是您的網絡使用Cat 5e，UTP電纜，那麼如何建立連接？當您查看路由器時，會發現它們僅接受RJ-45連接，但您知道不能將Cat 5e電纜的長度超過100米。您如何解決這個問題？帶媒體轉換器。</span></p>
<p id="N1067B" lang=""><span><span>使用媒體轉換器，您可以將RJ-45連接轉換為ST，SC或LC光纖連接，如下圖所示。</span><span>然後，將一英里的光纜連接到另一座建築物，並使用媒體轉換器將ST，SC或LC光纖連接轉換回另一台路由器所需的RJ-45。</span><span>因為這是一個簡單的“啞”設備，所以它僅轉換在第一媒體類型上接收到的所有內容，然後將其重複播放回第二媒體類型。</span><span>媒體轉換器的常見類型是從以太網（銅）到光纖（然後向後）或從同軸電纜到光纖（然後向後）。</span></span></p>
<span class="i1"><span class="i1"><span class="component"><span class="imagewrap"><span class="image"></span></span></span></span></span></div>
<div>
<div actguid="d87f2f5e0a0001dc1b677a5c838d016f" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f5e0a0001dc1b677a5c838d016f&amp;userGUID=637491a10a0001dc1ed3f86a54aa7da0&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose learnbydoing flash" id="dpch14_lbd02">
<div class="activityhead">
<div class="purposeType purposelearnbydoing" title=""><span class="scnReader">learn by doing</span></div>
<div class="activityinfo"></div>
</div>
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch14_lbd02">
<div class="page 482806" id="opch14_lbd02">
<div class="question" id="482806">
<div>
<p id="N10065" lang="">Put the steps of a TCP communication session in the correct order.</p>
</div>
<div class="i1">
<div class="component ordering">
<div>
<p></p>
<div class="grip"></div>
<div class="phContain">Segments two and three are acknowledged.</div>
<p></p>
<div class="grip"></div>
<div class="phContain">A single segment (segment 1) is sent over the network.</div>
<p></p>
<div class="grip"></div>
<div class="phContain">Three-way handshake.</div>
<p></p>
<div class="grip"></div>
<div class="phContain">Window size 2 is established.</div>
<p></p>
<div class="grip"></div>
<div class="phContain">Segment one is acknowledged.</div>
<p></p>
<div class="grip"></div>
<div class="phContain">Window size 1 is established.</div>
<p></p>
<div class="grip"></div>
<div class="phContain">Segments two and three are sent over the network.</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="pageControls clearfix" id="pagecontrols-d87f2f5e0a0001dc1b677a5c838d016f">
<p id="N10683" lang="" style="text-align: center;">Media converters. Photo used under CC-BY-NC license from<span> Adrian Black</span>.</p>
<p lang="" style="text-align: center;"><span>媒體轉換器。照片由Adrian Black</span><span><span>根據CC-BY-NC許可使用</span><span>。</span></span></p>
<h2>PCH14</h2>
<h3>Overview</h3>
<p>In this lesson, we will discuss transmission control protocol (TCP) and user datagram protocol (UDP), as well as their associated ports and protocols. We will specifically address the various email ports and protocols in use today, as well as discussing secure sockets layer/transport layer security (SSL/TLS) in the context of web security. Then, we will discuss file transfer protocol (FTP) and hypertext transfer protocol (HTTP) and their use on the Internet today, as well as some older technologies such as Telnet and its more secure alternative, secure shell (SSH).</p>
<p><span style="color: #ff0000;">概述</span></p>
<p><span>在本課程中，我們將討論傳輸控制協議（TCP）和用戶數據報協議（UDP），以及它們相關的端口和協議。</span><span>我們將專門解決當今使用的各種電子郵件端口和協議，並在Web安全的背景下討論安全套接字層/傳輸層安全（SSL / TLS）。</span><span>然後，我們將討論文件傳輸協議（FTP）和超文本傳輸協議（HTTP）及其在當今Internet上的使用，以及一些較老的技術，例如Telnet及其更安全的替代方法，安全外殼（SSH）。</span></p>
<h3>TCP and UDP</h3>
<p id="N106A0" lang="">TCP is a connection-oriented protocol that ensures the reliable transport of data segments from one device to another. During transmission, if a segment is dropped, it will be detected and resent or retransmitted by the originator device. Each communication is acknowledged upon receipt, providing a secure model to ensure successful communications. This type of transmission is great for all network data types, especially those that need delivery to be assured.</p>
<p lang=""><span>TCP是一種面向連接的協議，可確保將數據段從一台設備可靠地傳輸到另一台設備。</span><span>在傳輸過程中，如果某個段丟失，則發起方設備將檢測到該段並將其重新發送或重新發送。</span><span>每次通信在收到後都會得到確認，從而提供一個安全的模型來確保成功進行通信。</span><span>這種傳輸方式適用於所有網絡數據類型，尤其是那些需要確保傳輸的網絡數據類型。</span></p>
<p id="N106A3" lang="">When a TCP communication is initiated, the originator and receiver perform a “three-way handshake” before starting the data transmission. In the first step, the originator sends a packet with a synchronization (SYN) flag set. Next, the receiver acknowledges receipt of this SYN flagged packet by sending back a synchronization-acknowledged (SYN-ACK) flagged packet. Finally, the originator sends an acknowledgement of the synchronization-acknowledged flagged packet, and then data transmission occurs.</p>
<p lang=""><span>啟動TCP通信時，發起方和接收方在開始數據傳輸之前執行“三向握手”。</span><span>第一步，發起方發送一個設置了同步（SYN）標誌的數據包。</span><span>接下來，接收器通過發回同步確認（SYN-ACK）標記的數據包來確認此SYN標記的數據包的接收。</span><span>最後，始發者發送對已同步確認的標記數據包的確認，然後發生數據傳輸。</span></p>
<div class="examplewrap">
<div class="exHead"><span class="scnReader">EXAMPLE</span></div>
<div class="example clearfix">
<p id="N106A8" lang="">Think of this like two students who want to discuss an important project that is upcoming. The first student, Bob, says to Jane, “Jane, I want to talk to you.” Next, Jane says, “Bob, I acknowledge that you want to talk to me and I am ready to listen.” Finally, Bob tells her, “Jane, I understand you are ready to listen. Let’s talk.” At this point, the two students can talk, knowing they are both ready to listen to each other.</p>
<div class="example clearfix">
<div>
<p lang=""><span><span>例</span></span></p>
<p id="N106A8" lang=""><span><span>就像兩個想討論即將開展的重要項目的學生一樣。</span><span>第一位學生鮑勃對簡說：“簡，我想和你說話。”<span> </span></span><span>接下來，簡說：“鮑勃，我承認你想和我說話，我已經準備好傾聽。”<span> </span></span><span>最後，鮑勃告訴她：“簡，我知道你已經準備好聽了。</span><span>讓我們談談。”<span> </span></span><span>此時，兩個學生可以交談，知道他們倆都準備好了互相傾聽。</span></span></p>
</div>
</div>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image1.png"/></span><span class="caption" lang=""></span></span></span>
<p id="N106AF" lang="">Diagram of TCP three-way handshake. Image used under CC-BY license from National STEM  Consortium.</p>
</div>
</div>
<p id="N106B8" lang="">UDP, or user datagram protocol, was developed as a connectionless protocol in order to increase the speed of the network over TCP transmissions. Because of the three-way handshake in TCP, as well as all the delivery assurance and quality control, TCP has a good amount of network overhead that slows down its communications. Network engineers realized that sometimes you don’t need delivery assurance or quality control. So UDP was established.</p>
<p id="N106B8" lang=""><span>UDP（或用戶數據報協議）被開發為無連接協議，目的是通過TCP傳輸提高網絡速度。由於TCP中的三向握手以及所有的傳送保證和質量控制，TCP具有大量的網絡開銷，從而降低了其通信速度。網絡工程師意識到有時您不需要交付保證或質量控制。這樣就建立了UDP。</span></p>
<p id="N106BB" lang="">UDP is considered unreliable, because if a segment is dropped during transmission, the sending device doesn’t know and doesn’t care. There is no retransmission. Once data is sent, it is gone. This is good, though, for audio and video streaming. In these applications, the data transferred is enormously large, and if a single segment is dropped it doesn’t affect the overall quality of the audio or video sent.</p>
<p lang=""><span>UDP被認為是不可靠的，因為如果在傳輸過程中丟棄了一個網段，則發送設備將不知道也不在乎。</span><span>沒有重傳。</span><span>數據一旦發送，就消失了。</span><span>但是，這對於音頻和視頻流來說是很好的。</span><span>在這些應用程序中，傳輸的數據非常大，如果丟棄單個段，則不會影響所發送的音頻或視頻的整體質量。</span></p>
<div class="examplewrap">
<div class="exHead"><span class="scnReader">EXAMPLE</span></div>
<div class="example clearfix">
<p id="N106C0" lang="">I like to think of UDP as my college calculus teacher. He started at one side of the board at 8 a.m., and by 9 a.m. he was done at the other side of the board. He never asked if the students understood what he said or wrote, he just kept transmitting. This is a great example of UDP.</p>
<div class="example clearfix">
<div>
<p lang=""><span><span>例</span></span></p>
<p id="N106C0" lang=""><span><span>我喜歡將UDP視為我的大學微積分老師。</span><span>他在上午8點從董事會的一側開始，到上午9點，他在董事會的另一側完成了工作。</span><span>他從不問學生是否理解他所說或寫的內容，他只是不斷地傳播。</span><span>這是UDP的一個很好的例子。</span></span></p>
</div>
</div>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image2.png"/></span><span class="caption" lang=""></span></span></span>
<p id="N106C7" lang="">Diagram of UDP transmission. Image used under CC-BY license from<span> National STEM Consortium.</span></p>
<h3>TCP Vs. UDP</h3>
<p id="N106D7" lang="">TCP and UDP have many differences. TCP is reliable, but UDP is unreliable. TCP focuses on connection-oriented communications using the three-way handshake, while UDP is connectionless. TCP uses windowing, discussed in more detail later, to control the amount of data sent at a given time based on changing network speeds, but UDP simply transmits everything once with no windowing. TCP also supports segment sequencing; UDP just hopes it gets to the destination in the right order. Finally, TCP waits for acknowledgements, but UDP just hopes it got there. To simplify it, TCP is an assured and reliable communication method, UDP is just a best-effort model.</p>
<p lang=""><span style="color: #ff0000;" title="快速向上滾動">TCP Vs UDP協議</span></p>
<p id="N106D7" lang=""><span><span>TCP和UDP有很多區別。</span><span>TCP是可靠的，但UDP是不可靠的。</span><span>TCP專注於使用三向握手的面向連接的通信，而UDP是無連接的。</span><span>TCP使用開窗（稍後將詳細討論）來基於不斷變化的網絡速度來控制在給定時間發送的數據量，但是UDP僅傳輸所有信息一次而沒有開窗。</span><span>TCP還支持段排序；</span><span>UDP只是希望它以正確的順序到達目的地。</span><span>最後，TCP等待確認，但是UDP只是希望它到達目的地。</span><span>為簡化起見，TCP是一種有保證且可靠的通信方法，UDP只是一種盡力而為的模型。</span></span></p>
</div>
</div>
<div class="section" id="N106D0">
<div class="sectionContain">
<div actguid="d87f2f680a0001dc695874177a8a648a" class="asx" inlineparams="inlineClient=%2Fsuperactivity%2Fassessment2%2FInlineAssessmentClient.swf&amp;activityMode=delivery&amp;activityContextGUID=d87f2f680a0001dc695874177a8a648a&amp;userGUID=637491a10a0001dc1ed3f86a54aa7da0&amp;activityService=%2Fjcourse%2Fa2%2Frest&amp;webContentPath=%2Frepository%2Fwebcontent%2Fd826575d0a0001dc3e9f244fa018c560%2F&amp;logService=%2Flog%2Fserver&amp;">
<div class="activitywrap purpose didigetthis flash" id="dpch14_digt01">
<div class="actContain">
<div class="activity flash">
<div class="flash_obj asx testFlash" id="pch14_digt01">
<div class="page 482854 482855" id="opch14_digt01">
<div class="question ddfb" id="482855">
<p lang=""></p>
<h3>TCP Windowing</h3>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="section" id="tcp_windowing">
<div class="sectionContain">
<p id="N10722" lang="">TCP also supports a concept called windowing. If you have ever copied a file from a network share drive on the Windows operating system, you have seen windowing. Have you ever noticed when you copy a file over the network, it may start out saying there are “2 minutes remaining” until completion, then it jumps up to “3 hours remaining,” then back down to “30 minutes remaining”? This is TCP windowing in action.</p>
<p lang=""><span>TCP還支持稱為窗口化的概念。</span><span>如果您曾經從Windows操作系統上的網絡共享驅動器中復製過文件，則會看到窗口。</span><span>您是否曾經註意到通過網絡複製文件時，它可能會說“剩餘2分鐘”直到完成，然後跳到“剩餘3小時”，然後又跳回到“剩餘30分鐘”？</span><span>這是TCP窗口在起作用。</span></p>
<p id="N10725" lang="">Essentially, when a communication session is established with TCP, it first performs the three-way handshake. Next, it starts with a small window size, like windows size 1 in the image below, where a single segment is sent over the network and acknowledged. If this is successful, it increases the window size to 2, sending two segments at a time. It continues to do this, increasing the number of segments each time, transmitting more data in each window until an error occurs and retransmissions must be done. If errors occur, TCP understands that it must have been transmitting too fast, so it shrinks the window to slow down communication. As transmissions occur successfully, it again increases the window to push more data in each window. This window size is continually adjusted to get the most segments per window with the least errors in communication.</p>
<p id="N10725" lang=""><span>本質上，當使用TCP建立通信會話時，它首先執行三向握手。接下來，它以較小的窗口大小開始，如下面的圖片中的窗口大小1所示，其中單個段通過網絡發送並確認。如果成功，它將窗口大小增加到2，一次發送兩個段。它會繼續這樣做，每次增加段數，在每個窗口中傳輸更多數據，直到發生錯誤並必須重新傳輸為止。如果發生錯誤，TCP知道它一定傳輸速度太快，因此它縮小了窗口以減慢通信速度。隨著傳輸成功進行，它將再次增加窗口以在每個窗口中推送更多數據。</span></p>
<span class="imagewrap"><span class="imagewrap"><span class="image"><img class="popimg" id="_i_4" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image3.png"/></span></span></span></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div>
<h3>TCP IP Stack</h3>
<p id="N10680" lang="">Each client and server has an IP address. Clients and servers are identified on the network by their IP addresses. In addition to an IP address, each machine has numerous “ports” that we can utilize. A port is an endpoint to a logical connection. A client program specifies a particular server program on a computer in a network by identifying a port. Ports allow a single client to communicate simultaneously with multiple other devices, separating each session by using a designated port number.</p>
<p lang=""><span>每個客戶端和服務器都有一個IP地址。</span><span>客戶端和服務器通過其IP地址在網絡上進行標識。</span><span>除了IP地址外，每台機器都有許多我們可以利用的“端口”。</span><span>端口是邏輯連接的端點。</span><span>客戶端程序通過識別端口來指定網絡中計算機上的特定服務器程序。</span><span>端口允許單個客戶端與多個其他設備同時通信，並使用指定的端口號分隔每個會話。</span></p>
<div class="examplewrap">
<div class="exHead"><span class="scnReader">EXAMPLE</span></div>
<div class="example clearfix">
<p id="N10685" lang="">The best way to envision this is to think of an apartment building. Your building’s address may be 123 Main Street; this would be equivalent to your IP address. But how does the mailman know which door to use when delivering your package, since multiple families live at 123 Main Street? The mailman uses your apartment number, which defines which door in the building he would knock on to deliver your package. These apartment doors would be called ports in a computer, and the computer knows which programs and sessions requested information over the network by tracking the port numbers that make the requests.</p>
<div class="examplewrap">
<div class="example clearfix">
<div>
<p id="N10685" lang=""><span>設想此問題的最佳方法是考慮一棟公寓樓。您建築物的地址可能是123 Main Street；這相當於您的IP地址。但是由於多個家庭居住在Main Street 123號，郵遞員如何知道在運送包裹時要使用哪扇門？郵遞員使用您的公寓號碼，該號碼定義了他敲樓時要送出包裹的門。這些公寓門在計算機中稱為端口，計算機通過跟踪發出請求的端口號來知道哪些程序和會話在網絡上請求了信息。</span></p>
</div>
</div>
</div>
</div>
</div>
<div class="examplewrap">
<div class="example clearfix">
<div>
<p lang=""><span>EXAMPLE</span></p>
<p id="N1068B" lang="">Similar to an apartment building, on the network, let’s assume the client has an IP address of 10.1.1.1, which we call the source IP. The computer’s web browser chose a port number of 1248 from which to initiate the communication and a destination of 172.16.1.2 (which would be a web server for some company) and a destination port of 80 (which is the common port number for all web page traffic). The server then replies from its IP address (172.16.1.2) and port 80 to the client who made the request at their IP address of 10.1.1.1 and port 1248. As they continue the conversation, they will continue to use these IP addresses and ports, and at the same time the web server can maintain other communications with other customers, just like the client can surf to other websites in other tabs in their browser simultaneously without mixing the data, since they are separated by the port numbers. The diagram below illustrates this communication.</p>
<p lang=""><span>與網絡上的公寓樓類似，我們假設客戶端的IP地址為10.1.1.1，我們將其稱為源IP。</span><span>計算機的Web瀏覽器選擇了用於發起通信的端口號1248，以及目的地172.16.1.2（對於某些公司而言將是Web服務器）和目的端口80（這是所有Web站點的通用端口號）。頁面訪問量）。</span><span>然後，服務器從其IP地址（172.16.1.2）和端口80答复給以其IP地址10.1.1.1和端口1248發出請求的客戶端。隨著他們繼續進行對話，他們將繼續使用這些IP地址和端口，同時Web服務器可以維持與其他客戶的其他通信，就像客戶可以同時瀏覽其瀏覽器其他選項卡中的其他網站而無需混合數據，</span><span>因為它們由端口號分隔。</span><span>下圖說明了這種通信。</span></p>
</div>
</div>
</div>
<p id="N1068F" lang="">Port numbers are considered either well-known or ephemeral. Well-known port numbers are between 1 and 1023, like the web browsing port number of 80 in our last example. Port 80 is reserved as a well-known port for all hypertext transfer protocol (HTTP) traffic. Ephemeral port numbers are considered “high-numbered” ports and start at 1024 and go up to 65,535. These are usually the ports used by the client making the request, as we saw in our web browsing example, above, when the client chose port 1248 as its requesting port.</p>
<p lang=""><span>端口號被認為是眾所周知的或短暫的。</span><span>眾所周知的端口號在1到1023之間，例如我們上一個示例中的Web瀏覽端口號80。</span><span>端口80保留為所有超文本傳輸協議（HTTP）通信的眾所周知的端口。</span><span>臨時端口號被認為是“高編號”端口，起始於1024，最高可達65,535。</span><span>這些通常是客戶端發出請求的端口，正如我們在上面的Web瀏覽示例中所見，當客戶端選擇端口1248作為其請求端口時。</span></p>
<p><span class="imagewrap"><span class="image"><img class="popimg" id="_i_0" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image4.png"/></span></span></p>
</div>
<div class="i1">
<div class="component ordering">
<h3>Networking  Transfer Protocols</h3>
<div class="phContain">TCP/IP contains a suite of many different transfer protocols for routing information across networks. Each protocol uses a different well-known port to keep its traffic separate from the others. Web browsing occurs using either hypertext transfer protocol (HTTP) or hypertext transfer protocol secure (HTTPS). When it uses HTTP, it uses port 80. If, however, the client requests that the site be sent securely using encryption, then it uses the HTTPS protocol and port 443. When being sent securely, the client and server use either secure sockets layer (SSL) or transport layer security (TLS). These additional layers are put on top of the existing HTTP standard to encrypt the data connection between the client and the server.</div>
<div class="phContain"><span></span></div>
<div class="phContain"><span>TCP / IP包含一套用於在網絡之間路由信息的許多不同的傳輸協議。</span><span>每種協議使用不同的眾所周知的端口，以使其流量彼此獨立。</span><span>使用超文本傳輸協議（HTTP）或安全超文本傳輸協議（HTTPS）進行Web瀏覽。</span><span>當使用HTTP時，它將使用端口80。但是，如果客戶端請求使用加密安全地發送站點，則它將使用HTTPS協議和端口443。在安全發送時，客戶端和服務器將使用安全套接字層（SSL）或傳輸層安全性（TLS）。</span><span>這些額外的層放在現有HTTP標準之上，以加密客戶端和服務器之間的數據連接。</span></div>
<p id="N1069B" lang="">In addition to browsing the web, there are many other things that can be done on the network and each uses its own dedicated port number to keep the traffic separate. File transfer protocol (FTP) uses port 21. FTP is a standard network protocol used to transfer computer files from one host to another host over a TCP-based network, such as the Internet. FTP is built on a client-server architecture and uses separate control and data connections between the client and the server.</p>
<p lang=""><span>除了瀏覽Web之外，網絡上還有許多其他事情可以完成，並且每件事都使用自己的專用端口號來使流量分開。</span><span>文件傳輸協議（FTP）使用端口21。FTP是一種標準網絡協議，用於通過基於TCP的網絡（例如Internet）將計算機文件從一台主機傳輸到另一台主機。</span><span>FTP建立在客戶端-服務器體系結構上，並在客戶端和服務器之間使用單獨的控制和數據連接。</span></p>
<p id="N1069E" lang="">Telnet is a text-based remote access program for computers that communicates over port 23. Telnet is a user command and an underlying TCP/IP protocol for accessing computers remotely. Through telnet, an administrator or another user can access someone else's computer remotely. Unfortunately, telnet is an unsecured protocol where all the information between the client and server is communicated in clear text, so anyone who can capture this data can read it easily. For this reason, secure shell (SSH), which uses port 22, was introduced to replace telnet. SSH is a cryptographic (encrypted) network protocol for initiating text-based shell sessions on remote machines, similar to telnet but with the added strength of encryption.</p>
<p lang=""><span>Telnet是用於通過端口23進行通信的計算機的基於文本的遠程訪問程序。Telnet是用戶命令和用於遠程訪問計算機的基礎TCP / IP協議。</span><span>通過telnet，管理員或其他用戶可以遠程訪問其他人的計算機。</span><span>不幸的是，telnet是一種不安全的協議，其中客戶端與服務器之間的所有信息都以明文形式進行通信，因此任何可以捕獲此數據的人都可以輕鬆地讀取它。</span><span>因此，引入了使用端口22的安全外殼（SSH）來代替telnet。</span><span>SSH是一種加密（加密）網絡協議，用於在遠程計算機上啟動基於文本的Shell會話，類似於telnet，但具有增強的加密強度。</span></p>
<p id="N106A1" lang="">The domain name system (DNS) is a hierarchical distributed naming system for computers, services, or any resource connected to the Internet or to a private network. It allows for the translation of IP addresses to domain names, and from domain names to IP addresses. Remote desktop protocol (RDP) is a proprietary protocol developed by Microsoft, which provides users with a graphical interface to connect to other computers over a network connection using port 3389. The user employs RDP client software for this purpose, while the other computer must run RDP server software. RDP is a huge step up over telnet and SSH, because you receive a graphical environment to control the other user’s machine, just as if you were sitting in front of their Windows desktop.</p>
<p lang=""><span>域名系統（DNS）是用於計算機，服務或連接到Internet或專用網絡的任何資源的分層分佈式命名系統。</span><span>它允許將IP地址轉換為域名，也可以將域名轉換為IP地址。</span><span>遠程桌面協議（RDP）是Microsoft開發的專有協議，它為用戶提供圖形界面以使用端口3389通過網絡連接連接到其他計算機。用戶為此目的使用RDP客戶端軟件，而另一台計算機必須運行RDP服務器軟件。</span><span>RDP是在telnet和SSH之上的巨大進步，因為您將獲得一個圖形化的環境來控制其他用戶的計算機，就像您坐在他們的Windows桌面前一樣。</span></p>
<p id="N106A4" lang="">Simple network management protocol (SNMP) is a popular protocol for network management. It is used for collecting information from and configuring network devices, such as servers, printers, hubs, switches, and routers, on an Internet protocol (IP) network. SNMP traffic is sent over port 161.</p>
<p lang=""><span>簡單網絡管理協議（SNMP）是一種流行的網絡管理協議。</span><span>它用於從Internet協議（IP）網絡上的服務器，打印機，集線器，交換機和路由器等網絡設備收集信息並對其進行配置。</span><span>SNMP通信通過端口161發送。</span></p>
<p id="N106A7" lang="">Server message block (SMB) is a network protocol used for providing shared access to files, printers, and serial ports and miscellaneous communications between nodes on a network using port 139.</p>
<p lang=""><span>服務器消息塊（SMB）是一種網絡協議，用於提供對文件，打印機和串行端口的共享訪問以及使用端口139的網絡上節點之間的其他通信。</span></p>
<p id="N106AA" lang="">The lightweight directory access protocol (LDAP) is a directory service protocol that runs over port 389. LDAP provides a mechanism used to connect to, search, and modify Internet directories. The LDAP directory service is based on a client-server model.</p>
<p id="N106AA" lang=""><span>輕型目錄訪問協議（LDAP）是在端口389上運行的目錄服務協議。LDAP提供了一種用於連接，搜索和修改Internet目錄的機制。LDAP目錄服務基於客戶端-服務器模型。</span></p>
<p id="N106AA" lang="">Email</p>
<p lang=""><span title="快速向上滾動"><span>電子郵件</span></span></p>
<div class="section" id="email">
<div class="sectionContain">
<p id="N106B5" lang="">Email has evolved a lot over the years, but still operates on three main protocols. Simple mail transfer protocol (SMTP) is an Internet standard for sending email and most outbound email is sent using SMTP. SMTP uses port 25 to send email from network devices.</p>
<p lang=""><span>多年來，電子郵件已經有了很大的發展，但仍在三種主要協議上運行。</span><span>簡單郵件傳輸協議（SMTP）是用於發送電子郵件的Internet標準，大多數出站電子郵件都是使用SMTP發送的。</span><span>SMTP使用端口25從網絡設備發送電子郵件。</span></p>
<p id="N106B8" lang="">POP3 is the most common account type for personal email, but messages are typically deleted from the server when you check your email.</p>
<p lang=""><span>POP3是最常見的個人電子郵件帳戶類型，但是當您檢查電子郵件時，通常會將郵件從服務器中刪除。</span></p>
<p id="N106BB" lang="">Internet message access protocol (IMAP) servers let you work with email messages without downloading them to your computer first. This allows for email to be synchronized (synced) across multiple devices, including your desktop, laptop, tablet, and smartphone. IMAP uses port 143 to receive and synchronize your email. The real benefit of using IMAP, especially in today’s multiple device access world, is that it can change the read and delete state of messages across the multiple devices. For example, if I read a message on my phone, when I log into my desktop, the message will also show as having been read already.</p>
<p lang=""><span>Internet郵件訪問協議（IMAP）服務器使您可以處理電子郵件，而無需先將其下載到計算機上。</span><span>這允許跨多個設備（包括台式機，筆記本電腦，平板電腦和智能手機）同步電子郵件。</span><span>IMAP使用端口143接收和同步您的電子郵件。</span><span>使用IMAP的真正好處（尤其是在當今的多設備訪問世界中）是，它可以更改跨多個設備的消息的讀取和刪除狀態。</span><span>例如，如果我在手機上閱讀了一條消息，則當我登錄到桌面時，該消息也將顯示為已被閱讀。</span></p>
<h3>FTP</h3>
<p lang=""><span>In the OSI (Open Systems Interconnection) model, the application layer uses protocols such as trivial file transfer protocol (TFTP), file transfer protocol (FTP), and file transfer protocol secure (FTPS using TLS/SSL) to allow users to migrate data in a client-server model. FTP concerns itself with data only and as such eliminates the overhead of extraneous information such as what HTTP allows in addition to the actual data (advertisements, banners, images, etc.). This alleviates processing and bandwidth overhead and allows the client to simply retrieve the data from the server.</span></p>
<p lang=""><span><span>在OSI（開放系統互連）模型中，應用程序層使用諸如簡單文件傳輸協議（TFTP），文件傳輸協議（FTP）和安全文件傳輸協議（使用TLS / SSL的FTPS）之類的協議來允許用戶遷移數據在客戶端-服務器模型中。</span><span>FTP僅關注數據本身，因此消除了額外信息的開銷，例如除了實際數據（廣告，橫幅，圖像等）外，HTTP允許的信息。</span><span>這減輕了處理和帶寬開銷，並使客戶端可以簡單地從服務器檢索數據。</span></span></p>
</div>
</div>
<div class="i1">
<div class="component ordering"><span>FTP services can be accessed using client software such as ftp.exe (provided in all Microsoft operating systems), third-party software such as Filezilla or WinSCP, and any modern/current browser. Most light-duty users outside a corporate environment will not use a client FTP (or its secure version) because web browsers can negotiate FTP as well as HTTP. Public FTP servers allow for an anonymous user name so the client can reach file directories specifically designed for public access.</span></div>
<div class="component ordering"><span><span></span></span></div>
<div class="component ordering"><span><span>可以使用客戶端軟件（例如ftp.exe（在所有Microsoft操作系統中提供），第三方軟件（例如Filezilla或WinSCP）以及任何現代/最新的瀏覽器）訪問FTP服務。</span><span>公司環境之外的大多數輕型用戶都不會使用客戶端FTP（或其安全版本），因為Web瀏覽器可以協商FTP以及HTTP。</span><span>公用FTP服務器允許使用匿名用戶名，以便客戶端可以訪問專門為公用訪問而設計的文件目錄。</span></span></div>
<div class="component ordering"><span></span></div>
<div class="component ordering"><span>These network communications are passed through the presentation layer to the session layer, where sockets and sessions are created using logical port numbers as defined by TCP or UDP. TCP is stateful, connection-oriented and reliable. UDP is stateless, connectionless, and less reliable. The combination of source and destination address coupled with the logical port number creates a network socket, which establishes the session for process-to-process communication. <em class="italic" lang="">The material in this section is used under CC-BY license from <span>https://en.wikipedia.org/wiki/Transport_layer.</span></em></span></div>
</div>
<p><span>這些網絡通信通過表示層傳遞到會話層，在會話層中，使用由TCP或UDP定義的邏輯端口號創建套接字和會話。TCP是有狀態的，面向連接的且可靠的。UDP是無狀態，無連接且可靠性較低的。源地址和目標地址以及邏輯端口號的組合創建了一個網絡套接字，該網絡套接字建立了進程間通信的會話。<span> </span></span><em class="italic" lang=""><span><span>本節中的材料根據https://en.wikipedia.org/wiki/Transport_layer的</span></span></em><span><em class="italic" lang=""><span>CC-BY許可使用</span></em><span>。</span></span></p>
<p><span title="Quick scroll up">Active vs. Passive</span></p>
<p id="N106A9" lang="">Active FTP is a point-to-point connection that the client initiates and connects to the FTP server port 21 for commands and port 20 for data. That means that the server will actively initiate the connections back to the client’s listening port and will require the client to allow these connections, which the firewall blocks by default. Passive FTP allows the client to initiate the data connection on port 21, and then the FTP server moves the command and data connections to random ports on the server (with numbers higher than 1023). By initiating the connection from the client side, the burden of allowing a pass-through on the firewall resides with the FTP server administrator, who is better equipped to set a range of ports allowing connectivity.</p>
<p id="N106A9" lang=""><span>主動FTP是點對點連接，客戶端啟動該點並連接到FTP服務器端口21（用於命令）和端口20（用於數據）。這意味著服務器將主動啟動回到客戶端偵聽端口的連接，並要求客戶端允許這些連接，防火牆默認情況下會阻止這些連接。被動FTP允許客戶端在端口21上啟動數據連接，然後FTP服務器將命令和數據連接移至服務器上的隨機端口（數字大於1023）。通過從客戶端啟動連接，防火牆上允許通過的負擔就由FTP服務器管理員承擔，後者可以更好地設置一系列允許連接的端口。</span></p>
<p id="N106AC" lang="">For more information on active vs. passive FTP, visit this<span> website.</span></p>
<p lang=""><span>有關主動與被動FTP的更多信息，請訪問此網站</span><span><span>。</span></span></p>
<p lang="">Using FTP</p>
<p id="N106BD" lang="">Accessing FTP public servers using the command line is not nearly as user-friendly as using a web browser. However, both methods are viable and in use in corporate networks.</p>
<p lang=""><span>使用命令行訪問FTP公共服務器並不像使用Web瀏覽器那樣友好。</span><span>但是，這兩種方法都是可行的，並且已在公司網絡中使用。</span></p>
<ul lang="">
<li lang="">Open a web browser of choice</li>
<li lang=""><span><span>打開選擇的網絡瀏覽器</span></span></li>
<li lang="">Use this URL: ftp.funet.fi</li>
<li lang=""><span><span>使用此URL：ftp.funet.fi</span></span></li>
<li lang="">Click “pubs,” then “standards,” then “RFC”</li>
<li lang=""><span><span>點擊“發布”，然後點擊“標準”，然後點擊“ RFC”</span></span></li>
<li lang="">Search RFC 959 and access either the .txt or .pdf file (left-click)</li>
<li lang=""><span><span>搜索RFC 959並訪問.txt或.pdf文件（單擊鼠標左鍵）</span></span></li>
<li lang="">Search RFC 4217 and access either the .txt or .pdf file (left-click)</li>
<li lang=""><span><span>搜索RFC 4217並訪問.txt或.pdf文件（單擊鼠標左鍵）</span></span></li>
<li lang="">If you actually needed the file you can right-click and save as.</li>
<li lang=""><span>如果您確實需要該文件，則可以右鍵單擊並另存為</span></li>
</ul>
<p id="N106D3" lang="">Now that you see the file structure, notice it is similar to navigating a local hard drive with the only difference being that you use the “/” (forward slash) instead of the “\” (backslash) because you are accessing the folders through the Internet.</p>
<p lang=""><span>現在您已經看到文件結構，請注意，它類似於瀏覽本地硬盤驅動器，唯一的區別是您使用“ /”（正斜杠）而不是“ \”（反斜杠），因為您通過以下方式訪問文件夾互聯網。</span></p>
<p id="N106D6" lang=""><em class="italic" lang="">Note: In this next step using the command-line interface, you will only be able to navigate the FTP server, and will not be able to transfer files, because ftp.exe does not support passive mode by default. You can use a command-line tool in a Linux Distro; or, in Windows, you can go to Passive-FTP.com and download the freeware.</em></p>
<p lang=""><em class="italic" lang=""><span>注意：在接下來的使用命令行界面的步驟中，您將只能瀏覽FTP服務器，並且將無法傳輸文件，因為ftp.exe默認情況下不支持被動模式。您可以在Linux Distro中使用命令行工具。或者，在Windows中，您可以轉到Passive-FTP.com並下載免費軟件。</span></em></p>
<p id="N106DB" lang=""><em class="italic" lang="">However, you can create a workaround by first allowing FTP through your firewall (be sure to put firewall restrictions back in place after the exercise), and then issuing the following commands after you enter the password:</em></p>
<p lang=""><em class="italic" lang=""><span>但是，您可以通過首先允許FTP通過防火牆（確保在練習後將防火牆限制放回原位），然後在輸入密碼後發出以下命令來創建解決方法：</span></em></p>
<ul lang="">
<li lang="">quote pasv</li>
<li lang=""><span class="imagewrap"><span class="imagewrap"><span class="image"><span>引用pasv</span><img class="popimg" id="_i_2" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image5.png"/></span></span></span></li>
<li lang="">Now the “dir, ls” (list directory contents), and “get” (download) commands will work.</li>
<li lang=""><span><span>現在，“ dir，ls”（列出目錄內容）和“ get”（下載）命令將起作用。</span></span></li>
<li lang="">By default, the file will download to your user root at C:\Windows\Users\**<em class="italic" lang="">your user name</em>** or at the root of C:\ (wherever your OS is installed).</li>
<li lang=""><span><span>默認情況下，該文件將下載到用戶根目錄C：\ Windows \ Users \<span> </span></span><span>**或</span></span><em class="italic" lang=""><span><span>用戶名</span></span></em><span><span>**或C：\根目錄（無論安裝了OS的位置）。</span></span></li>
</ul>
<p id="N106F9" lang="">As a public FTP server set to passive mode, certain commands do not work and invoke the server to close the socket. If that happens, re-do your log on.</p>
<p lang=""><span>將公共FTP服務器設置為被動模式後，某些命令將不起作用，並調用服務器以關閉套接字。</span><span>如果發生這種情況，請重新登錄。</span></p>
<p id="N106FE" lang="">Use the keyboard command<span> </span><img id="_i_3" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image6.png"/><span> </span>+ r and type ftp (from an administrative command line interface you can also type ftp). The prompt changes to ftp&gt;</p>
<p lang=""><span>使用鍵盤命令</span><img id="_i_3" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image6.png"/><span><span>+ r並鍵入ftp（在管理命令行界面中，您也可以鍵入ftp）。</span><span>提示符更改為ftp&gt;</span></span></p>
<p lang=""><span class="imagewrap"><span class="image"><img class="popimg" id="_i_4" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image7.png"/></span></span></p>
<ul lang="">
<li lang="">Type “help” and look at the commands.</li>
<li lang=""><span><span>輸入“ help”並查看命令。</span></span></li>
<li lang="">Type at the command prompt: open ftp.funet.fi.</li>
<li lang=""><span><span>在命令提示符下鍵入：打開ftp.funet.fi。</span></span></li>
<li lang="">Follow the prompts to log on.</li>
<li lang=""><span><span>按照提示進行登錄。</span></span></li>
<li lang="">Username: anonymous.</li>
<li lang=""><span><span>用戶名：匿名。</span></span></li>
<li lang="">Password: any generic e-mail (such as <span>user@user.com</span><a href="mailto:user@user.com)">)</a>.</li>
<li lang=""><span><span>密碼：任何通用電子郵件（例如user@user.com）。</span></span></li>
</ul>
<p id="N10723" lang="">You get a welcome message and can now navigate through the directory structure you saw in the browser by typing the following commands:</p>
<p lang=""><span>您會收到一條歡迎消息，現在可以通過鍵入以下命令來瀏覽瀏覽器中看到的目錄結構：</span></p>
<ul lang="">
<li lang="">pwd — lists the current directory.</li>
<li lang="">
<div class="image shouldbeleft"><span>pwd-列出當前目錄。</span></div>
<div class="image shouldbeleft"><img class="popimg" id="_i_5" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image8.png"/></div>
</li>
<li lang="">cd — changes the directory. This may be in the form of:
<ul lang="">
<li lang="">cd pub (refer to the URL path from the previous exercise), or</li>
<li lang="">cd/pub/standards/RFC/</li>
</ul>
<span class="imagewrap"><span class="imagewrap"><span class="image"></span></span></span></li>
<li lang=""><span>cd —更改目錄。可以採用以下形式：</span>
<ul lang="">
<li lang=""><span><span>cd pub（請參閱上一練習中的URL路徑），或</span></span></li>
<li lang=""><span><span>cd / pub / standards / RFC /</span></span><span class="imagewrap"><span class="imagewrap"><span class="image"><img class="popimg" id="_i_6" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image9.png"/></span></span></span></li>
</ul>
</li>
</ul>
<p id="N10744" lang="">Now if you are using the workaround, Mac, or Linux you can download a file using the “get” command:</p>
<p lang=""><span>現在，如果您使用的是變通方法，Mac或Linux，則可以使用“ get”命令下載文件：</span></p>
<p lang=""><span class="imagewrap"><span class="image"><img class="popimg" id="_i_7" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image10.png"/></span></span></p>
<p id="N10750" lang="">Without the passive mode workaround, a third-party FTP client, Mac, or Linux this is as far as you can go. However, in the corporate environment you might be required to troubleshoot FTP on the local intranet, which would most likely be set to active FTP. Clearly, the need for command-line FTP service is fairly limited compared to using a browser.</p>
<p lang=""><span>如果沒有被動模式解決方法，則只能使用第三方FTP客戶端，Mac或Linux。</span><span>但是，在公司環境中，可能需要對本地Intranet上的FTP進行故障排除，這很可能會設置為活動FTP。</span><span>顯然，與使用瀏覽器相比，命令行FTP服務的需求非常有限。</span></p>
<div class="section" id="categorizing_twisted_pair">
<div class="sectionContain">
<p>SSL</p>
<p id="N10690" lang="">Secure sockets layer (SSL) is a cryptographic protocol designed to secure network communications at the application layer. Netscape developed the original protocol in 1995 and SSL became deprecated and was replaced by transport layer security (TLS) in 2015. For more information about SSL, visit this<span> website</span>.</p>
<p id="N10690" lang=""><span>安全套接字層（SSL）是一種加密協議，旨在保護應用程序層的網絡通信安全。Netscape在1995年開發了原始協議，並且不贊成使用SSL，並在2015年由傳輸層安全性（TLS）取代。有關SSL的更多信息，請訪問此網站</span><span>。</span></p>
<p lang="">The most common place to see TLS/SSL in action is in your web browser. For example, most all web sites now default from http (port 80) to https (port 443) with TLS. It is a client-server model where the client initiates the request to connect and the server offers the secure protocol.</p>
<p lang=""><span>實際使用TLS / SSL的最常見地方是您的Web瀏覽器。</span><span>例如，大多數網站現在默認使用TLS從http（端口80）更改為https（端口443）。</span><span>這是一種客戶端-服務器模型，其中客戶端發起連接請求，服務器提供安全協議。</span></p>
<p id="N1069D" lang="">Try this:</p>
<p lang=""><span>試試這個：</span></p>
<ul lang="">
<li lang="">Type: http://facebook.com or http://google.com into the browser of your choice. Notice the new URL changed to https.</li>
<li lang=""><span><span>在您選擇的瀏覽器中輸入：http://facebook.com或http://google.com。</span><span>請注意，新的URL更改為https。</span></span></li>
</ul>
<ul lang="">
<li lang="">Next, click on the padlock → connection. If you have an antivirus plug-in you might see the company’s certificate instead in browsers such as Internet Explorer.</li>
<li lang=""><span><span>接下來，單擊掛鎖→連接。</span><span>如果您具有防病毒插件，則可能會在Internet Explorer之類的瀏覽器中看到該公司的證書。</span></span></li>
</ul>
<p id="N10698" lang=""><span class="imagewrap"><span class="image"><img class="popimg" id="_i_1" onclick="loadImageFromPage(this);" src="https://oli.cmu.edu/repository/webcontent/d826575d0a0001dc3e9f244fa018c560/PCH14/webcontent/PCH14/image11.png"/></span></span></p>
</div>
</div>
</div>
</div>
<h1>HW2</h1>
<h2>1</h2>
<h1>HW3</h1>
<h2>15</h2>
<br/>Reverse Word Order<span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/><span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/>
<p><span style="color: #ff00ff;">倒序 <img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> <img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/> <img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></span></p>
<div><i>strings</i></div>
<div><i><span>弦</span></i></div>
<br/>Exercise 15 (and<span> solution</span>)
<p><span style="color: #ff00ff;">練習15（和解決方案）</span></p>
<p>Write a program (using functions!) that asks the user for a long string containing multiple words. Print back to the user the same string, except with the words in backwards order. For example, say I type the string:</p>
<p><span>編寫一個程序（使用函數！），要求用戶提供包含多個單詞的長字符串。 </span><span>向用戶打印相同的字符串，但單詞順序相反。</span><span>例如，說我鍵入字符串：</span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">My</span> <span class="n">name</span> <span class="ow">is</span> <span class="n">Michele</span></code></pre>
</figure>
<p>Then I would see the string:</p>
<p><span>然後我會看到字符串：</span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">Michele</span> <span class="ow">is</span> <span class="n">name</span> <span class="n">My</span></code></pre>
</figure>
<p>shown back to me.</p>
<p><span>顯示給我。</span></p>
Discussion
<p><span style="color: #ff00ff;">討論區</span></p>
<p>Concepts for this week:</p>
<p><span>本週的概念：</span></p>
<ul>
<li>More string things</li>
<li><span><span>更弦的東西</span></span></li>
</ul>
More string things
<p><span style="color: #ff00ff;">更弦的東西</span></p>
<p>Python has a lot of interesting things you can do with strings. I will show a few here, but you can see many more methods that may or may not be useful at the<span> official Python documentation about the string format.</span></p>
<p><span>Python有很多有趣的事情，您可以使用字符串來完成。我將在這裡展示一些方法，但是您可以在關於字符串格式的官方Python文檔中</span><span><span>看到更多可能有用或可能沒有用的方法</span><span>。</span></span></p>
<p>Remember that<span> strings are lists</span>.</p>
<p><span>請記住，字符串是列表</span><span><span>。</span></span></p>
Splitting strings
<p><span style="color: #ff00ff;">分割字符串</span></p>
<p>You can “split” or tear apart strings based on a given set of characters. For example:</p>
<p><span>您可以根據給定的字符集“拆分”或拆分字符串。</span><span>例如：</span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">teststring</span> <span class="o">=</span> <span class="s">"this is a test"</span>
  <span class="n">result</span> <span class="o">=</span> <span class="n">teststring</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">"t"</span><span class="p">)</span></code></pre>
</figure>
<p>And at the end,<span> </span><code class="highlighter-rouge">result</code><span> </span>will contain the list:</p>
<p><span>最後，</span><code class="highlighter-rouge">result</code><span><span>將包含列表：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="p">[</span><span class="s">''</span><span class="p">,</span> <span class="s">'his is a '</span><span class="p">,</span> <span class="s">'es'</span><span class="p">,</span> <span class="s">''</span><span class="p">]</span></code></pre>
</figure>
<p>Instead of<span> </span><code class="highlighter-rouge">"t"</code>, you can write any character you want. If you do not include any character, it means “split on all whitespace”:</p>
<p><span>除了</span><code class="highlighter-rouge">"t"</code><span><span>，您可以編寫任何所需的字符。</span><span>如果您不包含任何字符，則表示“在所有空格上分割”：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">teststring</span> <span class="o">=</span> <span class="s">"  this      has a lot    of   spaces and    tabs"</span>
  <span class="n">result</span> <span class="o">=</span> <span class="n">testring</span><span class="o">.</span><span class="n">split</span><span class="p">()</span></code></pre>
</figure>
<p>Then<span> </span><code class="highlighter-rouge">result</code><span> </span>contains:</p>
<p><span>然後</span><code class="highlighter-rouge">result</code><span><span>包含：</span></span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="p">[</span><span class="s">'this'</span><span class="p">,</span> <span class="s">'has'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'lot'</span><span class="p">,</span> <span class="s">'of'</span><span class="p">,</span> <span class="s">'spaces'</span><span class="p">,</span> <span class="s">'and'</span><span class="p">,</span> <span class="s">'tabs'</span><span class="p">]</span></code></pre>
</figure>
Joining strings
<p><span style="color: #ff00ff;">連接字符串</span></p>
<p>You can also relatively easily “join” or “smush” strings together:</p>
<p><span>您還可以相對容易地將字符串“連接”或“混入”：</span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">listofstrings</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">]</span>
  <span class="n">result</span> <span class="o">=</span> <span class="s">"**"</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">listofstrings</span><span class="p">)</span></code></pre>
</figure>
<p>Then<span> </span><code class="highlighter-rouge">result</code><span> </span>will contain the string:</p>
<p><span>然後</span><code class="highlighter-rouge">result</code><span><span>將包含字符串：</span></span></p>
<figure class="highlight">
<pre><code class="language-pycon" data-lang="pycon">  a**b**c</code></pre>
</figure>
<h2>22</h2>
<p>Read From File<span> </span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></p>
<div><i><span>從文件讀取<span> </span></span><img class="chili" src="https://www.practicepython.org/assets/img/chili-liz-20x20.png"/></i></div>
<p>Exercise 22 (and<span> Solution</span>)</p>
<p>練習22（和解決方案）</p>
<p>Given a<span> </span><code class="highlighter-rouge">.txt</code><span> </span>file that has a list of a bunch of names, count how many of each name there are in the file, and print out the results to the screen. I have a<span> </span><code class="highlighter-rouge">.txt</code><span> </span>file for you, if you want to<span> use it</span>!</p>
<p>給定一個.txt包含一堆名稱列表的文件，請計算該文件中每個名稱的數量，然後將結果打印到屏幕上。.txt如果您想使用它，我有一個文件供您使用！</p>
<p>Extra</p>
<p>額外</p>
<ul>
<li>Instead of using the<span> </span><code class="highlighter-rouge">.txt</code><span> </span>file from above (or instead of, if you want the challenge), take<span> this .txt file</span>, and count how many of each “category” of each image there are. This text file is actually a list of files corresponding to the<span> SUN database</span><span> </span>scene recognition database, and lists the file directory hierarchy for the images. Once you take a look at the first line or two of the file, it will be clear which part represents the scene category. To do this, you’re going to have to remember a bit about string parsing in Python 3. I talked a little bit about it<span> in this post.</span></li>
</ul>
<p>不要使用.txt上面的文件（或者，如果您想挑戰，也可以使用該.txt文件），請使用此文件，併計算每個圖像的每個“類別”有多少個。該文本文件實際上是與SUN數據庫場景識別數據庫相對應的文件的列表，並且列出了圖像的文件目錄層次結構。查看文件的第一行或第二行後，將很清楚哪個部分代表場景類別。為此，您需要記住一些有關Python 3中的字符串解析的知識。我在本文中對此進行了一些討論。</p>
<p>Discussion</p>
<p><span>討論區</span></p>
<p>Topics</p>
<p>主題</p>
<ol>
<li>Reading a file</li>
<li>Dictionaries</li>
</ol>
<p>1.讀取文件<br/>2.辭典</p>
<p>Reading a File</p>
<p>讀取文件</p>
<p>Reading a file is very analogous to writing a file, as<span><span> </span>I discussed before in Exercise 21.</span> But, the best source is always the<span><span> </span>official Python 3.3 documentation.</span></p>
<p><span>正如我之前在練習21中所討論的，讀取文件與寫入文件非常相似。但是，最好的來源始終是官方的Python 3.3文檔。</span></p>
<p>Simply, reading to a file takes two steps<br/>簡單來說，讀取文件需要兩個步驟</p>
<ol>
<li>Opening the file for reading</li>
<li>Read!</li>
</ol>
<p>1.打開文件進行讀取<br/>2.讀取！</p>
<p>Opening a file for reading is the same as opening for writing, just using a different flag</p>
<p>打開文件進行讀取與打開文件相同，只是使用一個不同的標誌</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'file_to_read.txt'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">open_file</span><span class="p">:</span>
    <span class="n">all_text</span> <span class="o">=</span> <span class="n">open_file</span><span class="o">.</span><span class="n">read</span><span class="p">()</span></code></pre>
</figure>
<p>Note how the<span> </span><code class="highlighter-rouge">'r'</code><span> </span>flag stands for “read”. The code sample from above reads the entire<span> </span><code class="highlighter-rouge">open_file</code><span> </span>all at once into the<span> </span><code class="highlighter-rouge">all_text</code><span> </span>variable. But, this means that we now have a long string in<span> </span><code class="highlighter-rouge">all_text</code><span> </span>that can then be manipulated in Python using any string methods you want.</p>
<p>請注意該'r'標誌代表“已讀”。上面的代碼示例open_file一次將全部讀取到了all_text變量中。但是，這意味著我們現在有了一個長字符串all_text，然後可以使用所需的任何字符串方法在Python中對其進行操作。</p>
<p>Another way of reading data from the file is line by line</p>
<p>從文件讀取數據的另一種方法是逐行</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'file_to_read.txt'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">open_file</span><span class="p">:</span>
  	<span class="n">line</span> <span class="o">=</span> <span class="n">open_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
  	<span class="k">while</span> <span class="n">line</span><span class="p">:</span>
    	<span class="k">print</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
    	<span class="n">line</span> <span class="o">=</span> <span class="n">open_file</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span></code></pre>
</figure>
<p>Instead of<span> </span><code class="highlighter-rouge">print(line)</code>, you can imagine doing anything you want to the line of text… If you save it to a variable, you have a string that you can then use something like<span> </span><code class="highlighter-rouge">.strip()</code><span> </span>or<span> </span><code class="highlighter-rouge">.split()</code><span> </span>with.</p>
<p>而不是print(line)，您可以想像對文本行進行任何操作...如果將其保存到變量中，則可以有一個字符串，然後可以使用諸如.strip()或.split()with之類的東西。</p>
<p>Dictionaries</p>
<p>辭典</p>
<p>Dictionaries are Python’s way of associating two pieces of data together. The<span><span> </span>official documentation says it all.</span></p>
<p><span>字典是Python將兩種數據關聯在一起的方式。在官方文件說明了一切。</span></p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">student_scores</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Adama'</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="s">'Starbuck'</span><span class="p">:</span> <span class="mi">75</span><span class="p">,</span> <span class="s">'Apollo'</span><span class="p">:</span> <span class="mi">80</span><span class="p">,</span> <span class="s">'Athena'</span><span class="p">:</span> <span class="mi">85</span><span class="p">,</span> <span class="s">'Agathon'</span><span class="p">:</span> <span class="mi">90</span><span class="p">}</span></code></pre>
</figure>
<p>The strings (or whatever happens to the left of the<span> </span><code class="highlighter-rouge">:</code><span> </span>sign), are called<span> </span><code class="highlighter-rouge">keys</code>. When I want to access the<span> </span><code class="highlighter-rouge">values</code><span> </span>(the things to the right of the<span> </span><code class="highlighter-rouge">:</code><span> </span>sign), I need to ask the dictionary for the value associated with the key</p>
<p>字符串（或:符號左側發生的任何事情）稱為keys。當我想訪問values（:符號右邊的東西）時，我需要向字典查詢與該鍵關聯的值</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">adama_score</span> <span class="o">=</span> <span class="n">student_scores</span><span class="p">[</span><span class="s">'Adama'</span><span class="p">]</span></code></pre>
</figure>
<p>You can then modify the score and save it back to the dictionary</p>
<p>然後，您可以修改分數並將其保存回字典</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">adama_score</span> <span class="o">=</span> <span class="n">student_scores</span><span class="p">[</span><span class="s">'Adama'</span><span class="p">]</span>
  <span class="n">adama_score</span> <span class="o">+=</span> <span class="mi">100</span>	<span class="o">%</span> <span class="n">adama_score</span> <span class="ow">is</span> <span class="n">now</span> <span class="mf">200.</span> <span class="n">This</span> <span class="n">doesn</span><span class="s">'t change the dictionary value</span><span class="err">
</span><span class="s">  student_scores['</span><span class="n">Adama</span><span class="s">'] = adama_score		</span><span class="si">% </span><span class="s">the score in the dictionary is now updated</span></code></pre>
</figure>
<p>I can’t ask the dictionary for the key associated with a value, but I can get a list of all the keys, and the same for all the values</p>
<p>我不能向字典詢問與某個值相關的鍵，但是我可以獲得所有鍵的列表，並且所有值都相同</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="n">all_scores</span> <span class="o">=</span> <span class="n">student_scores</span><span class="o">.</span><span class="n">keys</span><span class="p">()</span>
  <span class="n">all_names</span> <span class="o">=</span> <span class="n">student_scores</span><span class="o">.</span><span class="n">values</span><span class="p">()</span></code></pre>
</figure>
<p>I can use the<span> </span><code class="highlighter-rouge">in</code><span> </span>keyword (just like in lists), do<span> </span><code class="highlighter-rouge">dictionary comprehensions</code><span> </span>like list comprehensions (these are cool, take a look at the<span><span> </span>official bit about these</span>), and iterate over the elements in the dictionary (the syntax is just a little bit different).</p>
<p>我可以使用in關鍵字（就像在列表中一樣），dictionary comprehensions像列表理解一樣（這些很酷，請看一下有關這些的官方知識），然後遍歷字典中的元素（語法略有不同） 。</p>
<figure class="highlight">
<pre><code class="language-python" data-lang="python">  <span class="k">for</span> <span class="n">pair</span> <span class="ow">in</span> <span class="n">student_scores</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
  	<span class="k">print</span><span class="p">(</span><span class="n">pair</span><span class="p">)</span></code></pre>
</figure>
<p>And this prints out pairs of keys and values that look like:<span> </span><code class="highlighter-rouge">(Adama, 100)</code>, etc.</p>
<p>而這種打印出對項和值樣子的(Adama, 100)等</p>
<p>Because dictionaries are not ordered, looping through them does not guarantee the key / value pairs coming out in a particular order. So be careful.</p>
<p>由於字典沒有順序，因此遍歷字典不能保證鍵/值對以特定順序出現。所以要小心</p><h2>24</h2>
<p>https://www.practicepython.org/exercise/2014/12/27/24-draw-a-game-board.html</p>
<p></p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>